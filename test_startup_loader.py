"""
üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
"""

import asyncio
import logging
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s | %(levelname)-8s | %(name)-20s | %(message)s'
)

logger = logging.getLogger("test_startup_loader")

async def test_startup_loader():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        logger.info("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –ø–∞–º—è—Ç–∏
        from memory.memory_integration import initialize_smart_memory_system
        await initialize_smart_memory_system()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑—á–∏–∫
        from memory.startup_memory_loader import initialize_memory_from_existing_groups
        loader = await initialize_memory_from_existing_groups()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await loader.get_loading_stats()
        
        logger.info("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ó–ê–ì–†–£–ó–ö–ò:")
        logger.info(f"   üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['processed_messages']}")
        logger.info(f"   üì¶ –°–æ–∑–¥–∞–Ω–æ —á–∞–Ω–∫–æ–≤: {stats['created_chunks']}")
        logger.info(f"   üí¨ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–∞—Ç–æ–≤: {stats['total_chats']}")
        logger.info(f"   üìã ID —á–∞—Ç–æ–≤: {stats['processed_chats']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        from memory.smart_memory_manager import get_smart_memory_manager
        memory_manager = get_smart_memory_manager()
        
        system_stats = memory_manager.get_stats()
        logger.info("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –ü–ê–ú–Ø–¢–ò:")
        logger.info(f"   üìù –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {system_stats.get('total_messages', 0)}")
        logger.info(f"   üì¶ –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {system_stats.get('total_chunks', 0)}")
        logger.info(f"   üí¨ –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {system_stats.get('active_chats', 0)}")
        
        if stats['processed_messages'] > 0:
            logger.info("‚úÖ –ó–∞–≥—Ä—É–∑—á–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            logger.info("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ –Ω–µ—Ç —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(test_startup_loader())