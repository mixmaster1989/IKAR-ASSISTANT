#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ "–ø–µ—á–∞—Ç–∞–µ—Ç" –≤ Telegram
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π
"""

import sys
import os
import asyncio

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

async def test_typing_status():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ç–∞—Ç—É—Å–∞ '–ø–µ—á–∞—Ç–∞–µ—Ç'"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ '–ø–µ—á–∞—Ç–∞–µ—Ç'...")
    
    try:
        from api.telegram_core import send_chat_action
        
        # –¢–µ—Å—Ç–æ–≤—ã–π chat_id (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
        test_chat_id = "-1002686615681"  # –ì—Ä—É–ø–ø–∞ –ê–ù–¢–ò–õ–û–ü–ê
        
        print(f"üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å '–ø–µ—á–∞—Ç–∞–µ—Ç' –≤ —á–∞—Ç {test_chat_id}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        statuses = [
            ("typing", "‚å®Ô∏è –ü–µ—á–∞—Ç–∞–µ—Ç..."),
            ("upload_photo", "üì∏ –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ..."),
            ("record_voice", "üé§ –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å...")
        ]
        
        for action, description in statuses:
            print(f"üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {description}")
            success = await send_chat_action(test_chat_id, action)
            print(f"‚úÖ {description}: {'–£—Å–ø–µ—à–Ω–æ' if success else '–û—à–∏–±–∫–∞'}")
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç–∞—Ç—É—Å–∞–º–∏
            await asyncio.sleep(1)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞ '–ø–µ—á–∞—Ç–∞–µ—Ç'...")
    
    success = await test_typing_status()
    
    if success:
        print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –°—Ç–∞—Ç—É—Å '–ø–µ—á–∞—Ç–∞–µ—Ç' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ö†Ô∏è –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù! –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.")
    
    return success

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)

