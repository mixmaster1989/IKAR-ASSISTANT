#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã IKAR
"""

import subprocess
import sys
from pathlib import Path

def check_service_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        result = subprocess.run(['systemctl', 'is-active', 'chatumba'], 
                              capture_output=True, text=True)
        status = result.stdout.strip()
        
        if status == 'active':
            print("‚úÖ –°–µ—Ä–≤–∏—Å chatumba –ê–ö–¢–ò–í–ï–ù")
            return True
        else:
            print(f"‚ùå –°–µ—Ä–≤–∏—Å chatumba –ù–ï –ê–ö–¢–ò–í–ï–ù: {status}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return False

def check_main_file():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ main.py"""
    main_path = Path("backend/main.py")
    if not main_path.exists():
        print("‚ùå –§–∞–π–ª backend/main.py –ù–ï –ù–ê–ô–î–ï–ù!")
        return False
    
    with open(main_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    if 'from flask import' in content:
        print("‚ùå main.py —Å–æ–¥–µ—Ä–∂–∏—Ç Flask –∏–º–ø–æ—Ä—Ç—ã - –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï")
        return False
    elif 'from fastapi import' in content:
        print("‚úÖ main.py –∏—Å–ø–æ–ª—å–∑—É–µ—Ç FastAPI")
        return True
    else:
        print("‚ö†Ô∏è main.py —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ")
        return False

def check_last_logs():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤"""
    try:
        result = subprocess.run(['journalctl', '-u', 'chatumba', '-n', '3', '--no-pager'], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–æ–≤:")
            print(result.stdout)
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ IKAR")
    print("=" * 40)
    
    service_ok = check_service_status()
    main_ok = check_main_file()
    
    check_last_logs()
    
    print("\n" + "=" * 40)
    
    if service_ok and main_ok:
        print("‚úÖ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ù–û–†–ú–ê–õ–¨–ù–û")
    elif not main_ok:
        print("üîß –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 fix_system.py")
    elif not service_ok:
        print("üîÑ –¢–†–ï–ë–£–ï–¢–°–Ø –ü–ï–†–ï–ó–ê–ü–£–°–ö:")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl restart chatumba")
    else:
        print("‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 diagnose_system.py")

if __name__ == "__main__":
    main() 