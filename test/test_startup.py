#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã IKAR
"""

import sys
import os
import traceback

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        print("  ‚úì –ò–º–ø–æ—Ä—Ç config...")
        from config import Config
        
        print("  ‚úì –ò–º–ø–æ—Ä—Ç core.personality...")
        from core.personality import ChatumbaPersonality
        
        print("  ‚úì –ò–º–ø–æ—Ä—Ç core.soul...")
        from core.soul import Soul
        
        print("  ‚úì –ò–º–ø–æ—Ä—Ç core.collective_mind...")
        from core.collective_mind import CollectiveMind
        
        print("  ‚úì –ò–º–ø–æ—Ä—Ç api.routes...")
        from api.routes import router
        
        print("‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:")
        traceback.print_exc()
        return False

def test_basic_functionality():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    try:
        from config import Config
        from core.personality import ChatumbaPersonality
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = Config()
        print("  ‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –ª–∏—á–Ω–æ—Å—Ç—å
        personality = ChatumbaPersonality("test_user")
        print("  ‚úì –õ–∏—á–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–∏
        reaction = personality.choose_reaction_type("–ü—Ä–∏–≤–µ—Ç!")
        print(f"  ‚úì –†–µ–∞–∫—Ü–∏—è –≤—ã–±—Ä–∞–Ω–∞: {reaction}")
        
        print("‚úÖ –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: {e}")
        print("üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:")
        traceback.print_exc()
        return False

def test_fastapi_startup():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ FastAPI"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FastAPI...")
    
    try:
        print("  ‚úì –ò–º–ø–æ—Ä—Ç main...")
        from main import app
        
        print("  ‚úì FastAPI app —Å–æ–∑–¥–∞–Ω")
        print(f"  ‚úì –ó–∞–≥–æ–ª–æ–≤–æ–∫: {app.title}")
        print(f"  ‚úì –í–µ—Ä—Å–∏—è: {app.version}")
        
        print("‚úÖ FastAPI –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ FastAPI: {e}")
        print("üìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:")
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üöÄ –¢–ï–°–¢ –ó–ê–ü–£–°–ö–ê –°–ò–°–¢–ï–ú–´ IKAR")
    print("=" * 40)
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
    imports_ok = test_imports()
    
    # –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    functionality_ok = test_basic_functionality()
    
    # –¢–µ—Å—Ç FastAPI
    fastapi_ok = test_fastapi_startup()
    
    print("\n" + "=" * 40)
    if imports_ok and functionality_ok and fastapi_ok:
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É!")
    else:
        print("‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´!")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
        
        if not imports_ok:
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏")
        if not functionality_ok:
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é")
        if not fastapi_ok:
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å FastAPI")

if __name__ == "__main__":
    main() 