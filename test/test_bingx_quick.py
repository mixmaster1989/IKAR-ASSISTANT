#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API BingX —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏.
"""

import sys
import asyncio
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
backend_path = Path(__file__).parent / "backend"
sys.path.insert(0, str(backend_path))

def test_bingx_quick():
    """–ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API BingX."""
    print("üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API BingX")
    print("=" * 40)
    
    try:
        from utils.import_helper import get_bingx_client
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        bingx_client = get_bingx_client()
        
        if not bingx_client:
            print("‚ùå BingX –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
        
        print("‚úÖ BingX –∫–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # –¢–µ—Å—Ç 1: –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        print("\nüì° –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API")
        start_time = time.time()
        
        try:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
            import requests
            from requests.adapters import HTTPAdapter
            from urllib3.util.retry import Retry
            
            # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏
            session = requests.Session()
            retry = Retry(connect=1, backoff_factor=0.1)
            adapter = HTTPAdapter(max_retries=retry)
            session.mount('http://', adapter)
            session.mount('https://', adapter)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π endpoint
            response = session.get('https://open-api.bingx.com/openApi/spot/v1/common/serverTime', 
                                 timeout=5)
            
            if response.status_code == 200:
                print("‚úÖ API BingX –¥–æ—Å—Ç—É–ø–µ–Ω")
                data = response.json()
                print(f"   –°—Ç–∞—Ç—É—Å: {data.get('code', 'unknown')}")
            else:
                print(f"‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except requests.exceptions.Timeout:
            print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API")
        except requests.exceptions.ConnectionError:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        elapsed = time.time() - start_time
        print(f"   –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed:.2f}—Å")
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("\n‚öôÔ∏è –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        try:
            from config import BINGX_API_KEY, BINGX_SECRET_KEY
            
            if BINGX_API_KEY and BINGX_SECRET_KEY:
                print("‚úÖ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
                print(f"   API Key: ...{BINGX_API_KEY[-8:] if len(BINGX_API_KEY) > 8 else BINGX_API_KEY}")
                print(f"   Secret Key: ...{BINGX_SECRET_KEY[-8:] if len(BINGX_SECRET_KEY) > 8 else BINGX_SECRET_KEY}")
            else:
                print("‚ö†Ô∏è API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
                print("   –î–æ–±–∞–≤—å—Ç–µ BINGX_API_KEY –∏ BINGX_SECRET_KEY –≤ .env")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫—Ä–∏–ø—Ç–æ—Å—É–¥–æ–º
        print("\nüîó –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
        try:
            from utils.import_helper import get_crypto_integration
            crypto_integration = get_crypto_integration()
            
            if crypto_integration:
                print("‚úÖ Crypto integration –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print("‚ö†Ô∏è Crypto integration –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        
        print("\n" + "=" * 40)
        print("üéâ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_telegram_integration():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –≤ Telegram."""
    print("\nüì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –≤ Telegram")
    print("=" * 40)
    
    print("üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ß–ê–¢–£–ú–ë–ê:")
    print("1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –≥—Ä—É–ø–ø—É: '–ß–ê–¢–£–ú–ë–ê'")
    print("2. –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≥—Ä—É–ø–ø—É")
    print("3. –í –æ—Ç–≤–µ—Ç–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    
    print("\nüí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–∏–ø—Ç–æ—Å—É–¥–∞:")
    print("1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã")
    print("2. –ù–∞–∂–º–∏—Ç–µ '–î–∞' –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")
    print("3. –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –∫—Ä–∏–ø—Ç–æ–ø–∞—Ç–µ—Ä–Ω—ã ‚Üí –∫–Ω–æ–ø–∫–∏ –∫—Ä–∏–ø—Ç–æ—Å—É–¥–∞")
    print("4. –ù–∞–∂–º–∏—Ç–µ '–î–∞' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫—Ä–∏–ø—Ç–æ—Å—É–¥–∞")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ –∞–Ω–∞–ª–∏–∑–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ BingX API")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üîç –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API BingX")
    
    # –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    success = test_bingx_quick()
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    test_telegram_integration()
    
    if success:
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —á–µ—Ä–µ–∑ Telegram")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ª–æ–≥–∏")

if __name__ == "__main__":
    main() 