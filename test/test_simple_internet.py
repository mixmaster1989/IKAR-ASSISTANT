#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π –ø—Ä–æ—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞
"""

import asyncio
import json
from simple_internet_system import SimpleInternetSystem

async def test_simple_internet():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"""
    
    print("üåê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ô –ü–†–û–°–¢–û–ô –°–ò–°–¢–ï–ú–´ –ò–ù–¢–ï–†–ù–ï–¢-–ò–ù–¢–ï–õ–õ–ï–ö–¢–ê")
    print("=" * 60)
    
    system = SimpleInternetSystem()
    
    # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã
    print("\n1Ô∏è‚É£ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –ü–û–ì–û–î–´")
    print("-" * 30)
    
    weather_queries = [
        "–±–æ—Ç, –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ?",
        "–±–æ—Ç, –ø–æ–≥–æ–¥–∞ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ",
        "–±–æ—Ç, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É"
    ]
    
    for query in weather_queries:
        print(f"\n–ó–∞–ø—Ä–æ—Å: {query}")
        result = system.search_internet(query)
        print(f"–¢–∏–ø: {result.get('type')}")
        print(f"–£—Å–ø–µ—Ö: {result.get('success')}")
        
        if result.get('success') and result.get('data'):
            data = result['data']
            print(f"–ì–æ—Ä–æ–¥: {data.get('city')}")
            print(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data.get('temperature')}")
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {data.get('description')}")
            print(f"–ò—Å—Ç–æ—á–Ω–∏–∫: {data.get('source')}")
        else:
            print(f"–û—à–∏–±–∫–∞: {result.get('error')}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
    print("\n\n2Ô∏è‚É£ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –ù–û–í–û–°–¢–ï–ô")
    print("-" * 30)
    
    news_queries = [
        "–±–æ—Ç, –∫–∞–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏?",
        "–±–æ—Ç, –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö",
        "–±–æ—Ç, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –º–∏—Ä–µ?"
    ]
    
    for query in news_queries:
        print(f"\n–ó–∞–ø—Ä–æ—Å: {query}")
        result = system.search_internet(query)
        print(f"–¢–∏–ø: {result.get('type')}")
        print(f"–£—Å–ø–µ—Ö: {result.get('success')}")
        
        if result.get('success') and result.get('data'):
            data = result['data']
            print(f"–ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {len(data)}")
            for i, news in enumerate(data[:2], 1):
                print(f"  {i}. {news.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                print(f"     URL: {news.get('url', 'N/A')}")
        else:
            print(f"–û—à–∏–±–∫–∞: {result.get('error')}")
    
    # –¢–µ—Å—Ç 3: –û–±—â–∏–π –ø–æ–∏—Å–∫
    print("\n\n3Ô∏è‚É£ –¢–ï–°–¢ –û–ë–©–ï–ì–û –ü–û–ò–°–ö–ê")
    print("-" * 30)
    
    general_queries = [
        "–±–æ—Ç, —á—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç?",
        "–±–æ—Ç, –∫—Ç–æ —Ç–∞–∫–æ–π –ò–ª–æ–Ω –ú–∞—Å–∫?",
        "–±–æ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–ª–æ–∫—á–µ–π–Ω?"
    ]
    
    for query in general_queries:
        print(f"\n–ó–∞–ø—Ä–æ—Å: {query}")
        result = system.search_internet(query)
        print(f"–¢–∏–ø: {result.get('type')}")
        print(f"–£—Å–ø–µ—Ö: {result.get('success')}")
        
        if result.get('success') and result.get('data'):
            data = result['data']
            print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {data.get('results_count', 0)}")
            print(f"–°–≤–æ–¥–∫–∞: {data.get('summary', 'N/A')[:200]}...")
            print(f"–ò—Å—Ç–æ—á–Ω–∏–∫–∏: {len(data.get('sources', []))}")
        else:
            print(f"–û—à–∏–±–∫–∞: {result.get('error')}")
    
    # –¢–µ—Å—Ç 4: –û—á–∏—Å—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    print("\n\n4Ô∏è‚É£ –¢–ï–°–¢ –û–ß–ò–°–¢–ö–ò –ó–ê–ü–†–û–°–û–í")
    print("-" * 30)
    
    test_queries = [
        "–±–æ—Ç, –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞?",
        "–ë–û–¢, –ù–û–í–û–°–¢–ò!",
        "–±–æ—Ç—É, —á—Ç–æ –Ω–æ–≤–æ–≥–æ?",
        "–±–æ—Ç–æ–º, —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö"
    ]
    
    for query in test_queries:
        cleaned = system.clean_query(query)
        print(f"–û—Ä–∏–≥–∏–Ω–∞–ª: '{query}'")
        print(f"–û—á–∏—â–µ–Ω–Ω—ã–π: '{cleaned}'")
        print()
    
    # –¢–µ—Å—Ç 5: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
    print("\n\n5Ô∏è‚É£ –¢–ï–°–¢ –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –¢–ò–ü–ê –ó–ê–ü–†–û–°–ê")
    print("-" * 30)
    
    type_test_queries = [
        "–ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ",
        "–ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏",
        "—á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò",
        "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞",
        "—á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –º–∏—Ä–µ"
    ]
    
    for query in type_test_queries:
        query_type = system.detect_query_type(query)
        print(f"–ó–∞–ø—Ä–æ—Å: '{query}' -> –¢–∏–ø: {query_type}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    asyncio.run(test_simple_internet()) 