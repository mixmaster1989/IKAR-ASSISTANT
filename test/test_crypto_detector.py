#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∫—Ä–∏–ø—Ç–æ–∫–æ–Ω—Ç–µ–Ω—Ç–∞
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from api.telegram_polling import detect_crypto_content, CRYPTO_TERMS

def test_crypto_detector():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–µ–∫—Ç–æ—Ä –∫—Ä–∏–ø—Ç–æ–∫–æ–Ω—Ç–µ–Ω—Ç–∞."""
    
    print("–¢–ï–°–¢ –î–ï–¢–ï–ö–¢–û–†–ê –ö–†–ò–ü–¢–û–ö–û–ù–¢–ï–ù–¢–ê")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã
    test_texts = [
        "–ù–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø–æ–∫–∞–∑–∞–Ω –≥—Ä–∞—Ñ–∏–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã PEPE/USDT –Ω–∞ –±–∏—Ä–∂–µ OKX",
        "–ì—Ä–∞—Ñ–∏–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∏–Ω–∞–º–∏–∫—É —Ü–µ–Ω—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 –º–∏–Ω—É—Ç",
        "–í–∏–¥–Ω—ã —Å–≤–µ—á–Ω—ã–µ –±–∞—Ä—ã, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã",
        "–ù–∞ –≥—Ä–∞—Ñ–∏–∫–µ —Ç–∞–∫–∂–µ –Ω–∞–Ω–µ—Å–µ–Ω—ã —Å–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ä–µ–¥–Ω–∏–µ (EMA)",
        "Bitcoin —Ä–∞—Å—Ç–µ—Ç –∫ –ª—É–Ω–µ!",
        "–û–±—ã—á–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å –∫–æ—Ç–∏–∫–æ–º",
        "Ethereum –ø–∞–¥–∞–µ—Ç –≤–Ω–∏–∑",
        "–ü–æ–∫—É–ø–∞—é –Ω–∞ Binance",
        "–¢—Ä–µ–π–¥–∏–Ω–≥ –Ω–∞ TradingView"
    ]
    
    print(f"üìö –í—Å–µ–≥–æ –∫—Ä–∏–ø—Ç–æ—Ç–µ—Ä–º–∏–Ω–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ: {len(CRYPTO_TERMS)}")
    print(f"üî§ –ü—Ä–∏–º–µ—Ä—ã —Ç–µ—Ä–º–∏–Ω–æ–≤: {list(CRYPTO_TERMS)[:10]}")
    print()
    
    for i, text in enumerate(test_texts, 1):
        print(f"üß™ –¢–ï–°–¢ {i}: {text}")
        is_crypto, found_terms = detect_crypto_content(text)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –ö–†–ò–ü–¢–û' if is_crypto else '‚ùå –ù–ï –ö–†–ò–ü–¢–û'}")
        if found_terms:
            print(f"   –ù–∞–π–¥–µ–Ω–æ: {found_terms}")
        print()
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–∑ –ª–æ–≥–æ–≤
    real_description = """–ù–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø–æ–∫–∞–∑–∞–Ω –≥—Ä–∞—Ñ–∏–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã PEPE/USDT –Ω–∞ –±–∏—Ä–∂–µ OKX. –ì—Ä–∞—Ñ–∏–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∏–Ω–∞–º–∏–∫—É —Ü–µ–Ω—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 –º–∏–Ω—É—Ç. –í–∏–¥–Ω—ã —Å–≤–µ—á–Ω—ã–µ –±–∞—Ä—ã, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞. –ù–∞ –≥—Ä–∞—Ñ–∏–∫–µ —Ç–∞–∫–∂–µ –Ω–∞–Ω–µ—Å–µ–Ω—ã —Å–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ä–µ–¥–Ω–∏–µ (EMA) —Å –ø–µ—Ä–∏–æ–¥–∞–º–∏ 20, 50, 100 –∏ 200. –í –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ü–µ–Ω—ã, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –í –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –ø–æ–∫–∞–∑–∞–Ω—ã –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ —Ç–µ–∫—É—â–∏–º —Ü–µ–Ω–∞–º. –í –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é: "–ö–æ—Ç–∏—Ä–æ–≤–∫–∏", "–ì—Ä–∞—Ñ–∏–∫", "–û–±–∑–æ—Ä", "–°–æ–æ–±—â–µ—Å—Ç–≤–æ" –∏ "–ú–µ–Ω—é". –í—Ä–µ–º—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ ‚Äî 14:34, –¥–∞—Ç–∞ ‚Äî —Å—É–±–±–æ—Ç–∞, 21 –∏—é–Ω—è. –£—Ä–æ–≤–µ–Ω—å –∑–∞—Ä—è–¥–∞ –±–∞—Ç–∞—Ä–µ–∏ ‚Äî 41%."""
    
    print("üéØ –†–ï–ê–õ–¨–ù–´–ô –¢–ï–°–¢ (–∏–∑ –ª–æ–≥–æ–≤):")
    print(f"–¢–µ–∫—Å—Ç: {real_description[:100]}...")
    is_crypto, found_terms = detect_crypto_content(real_description)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –ö–†–ò–ü–¢–û' if is_crypto else '‚ùå –ù–ï –ö–†–ò–ü–¢–û'}")
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ç–µ—Ä–º–∏–Ω–æ–≤: {len(found_terms)}")
    print(f"–¢–µ—Ä–º–∏–Ω—ã: {found_terms}")

if __name__ == "__main__":
    test_crypto_detector()