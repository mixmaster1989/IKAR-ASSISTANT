#!/bin/bash

# üß† –°–ö–†–ò–ü–¢ –î–õ–Ø –ü–†–û–°–ú–û–¢–†–ê –õ–û–ì–û–í –ü–†–û–ú–ü–¢–û–í AI –ú–û–î–ï–õ–ï–ô
# –ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ª–æ–≥–æ–≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å AI –º–æ–¥–µ–ª—è–º–∏

LOG_FILE="ai_prompts.log"
VIEWER_SCRIPT="view_ai_prompts_logs.py"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    echo -e "${CYAN}"
    echo "üß† –õ–û–ì–ò –ü–†–û–ú–ü–¢–û–í AI –ú–û–î–ï–õ–ï–ô"
    echo "================================"
    echo -e "${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é
show_menu() {
    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo "1)  –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ (tail)"
    echo "2)  –°–≤–æ–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
    echo "3)  –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–º–ø—Ç—ã"
    echo "4)  –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã"
    echo "5)  –û—à–∏–±–∫–∏"
    echo "6)  –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
    echo "7)  –ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥–∞–º"
    echo "8)  –ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ ID"
    echo "9)  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "10) –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–æ–¥–µ–ª—è–º"
    echo "11) –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–º–ø—Ç–æ–≤"
    echo "12) –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤"
    echo "0)  –í—ã—Ö–æ–¥"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
check_log_file() {
    if [ ! -f "$LOG_FILE" ]; then
        echo -e "${RED}‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE${NC}"
        echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –ª–æ–≥–æ–≤ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å"
        return 1
    fi
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π
show_tail() {
    echo -e "${GREEN}üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤:${NC}"
    echo ""
    if command -v tail &> /dev/null; then
        tail -n 20 "$LOG_FILE" | while IFS= read -r line; do
            if [[ $line == *"üß† AI –ó–ê–ü–†–û–°:"* ]]; then
                echo -e "${BLUE}$line${NC}"
            elif [[ $line == *"‚úÖ AI –û–¢–í–ï–¢:"* ]]; then
                echo -e "${GREEN}$line${NC}"
            elif [[ $line == *"‚ùå AI –û–®–ò–ë–ö–ê:"* ]]; then
                echo -e "${RED}$line${NC}"
            elif [[ $line == *"‚ö° AI –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨:"* ]]; then
                echo -e "${YELLOW}$line${NC}"
            else
                echo "$line"
            fi
        done
    else
        echo -e "${RED}‚ùå –ö–æ–º–∞–Ω–¥–∞ tail –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–≤–æ–¥–∫–∏
show_summary() {
    echo -e "${GREEN}üìä –°–≤–æ–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:${NC}"
    echo ""
    if [ -f "$VIEWER_SCRIPT" ]; then
        python3 "$VIEWER_SCRIPT" --action summary
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $VIEWER_SCRIPT${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
show_prompts() {
    echo -e "${GREEN}üß† –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–º–ø—Ç—ã:${NC}"
    echo ""
    if [ -f "$VIEWER_SCRIPT" ]; then
        python3 "$VIEWER_SCRIPT" --action prompts --count 10
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
show_responses() {
    echo -e "${GREEN}üí¨ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã:${NC}"
    echo ""
    if [ -f "$VIEWER_SCRIPT" ]; then
        python3 "$VIEWER_SCRIPT" --action responses --count 10
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–æ–∫
show_errors() {
    echo -e "${GREEN}‚ùå –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:${NC}"
    echo ""
    if [ -f "$VIEWER_SCRIPT" ]; then
        python3 "$VIEWER_SCRIPT" --action errors --count 10
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
show_performance() {
    echo -e "${GREEN}‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:${NC}"
    echo ""
    if [ -f "$VIEWER_SCRIPT" ]; then
        python3 "$VIEWER_SCRIPT" --action performance --hours 24
    else
        echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞
search_logs() {
    echo -e "${GREEN}üîç –ü–æ–∏—Å–∫ –≤ –ª–æ–≥–∞—Ö:${NC}"
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: " query
    if [ -n "$query" ]; then
        if [ -f "$VIEWER_SCRIPT" ]; then
            python3 "$VIEWER_SCRIPT" --action search --query "$query"
        else
            echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        fi
    else
        echo -e "${YELLOW}‚ùå –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
show_full_prompt() {
    echo -e "${GREEN}üìÑ –ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç:${NC}"
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø—Ä–æ—Å–∞: " request_id
    if [ -n "$request_id" ]; then
        if [ -f "$VIEWER_SCRIPT" ]; then
            python3 "$VIEWER_SCRIPT" --action full --request-id "$request_id"
        else
            echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        fi
    else
        echo -e "${YELLOW}‚ùå ID –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
monitor_realtime() {
    echo -e "${GREEN}üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:${NC}"
    echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    if command -v tail &> /dev/null; then
        tail -f "$LOG_FILE" | while IFS= read -r line; do
            if [[ $line == *"üß† AI –ó–ê–ü–†–û–°:"* ]]; then
                echo -e "${BLUE}$line${NC}"
            elif [[ $line == *"‚úÖ AI –û–¢–í–ï–¢:"* ]]; then
                echo -e "${GREEN}$line${NC}"
            elif [[ $line == *"‚ùå AI –û–®–ò–ë–ö–ê:"* ]]; then
                echo -e "${RED}$line${NC}"
            elif [[ $line == *"‚ö° AI –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨:"* ]]; then
                echo -e "${YELLOW}$line${NC}"
            else
                echo "$line"
            fi
        done
    else
        echo -e "${RED}‚ùå –ö–æ–º–∞–Ω–¥–∞ tail –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –º–æ–¥–µ–ª—è–º
show_model_stats() {
    echo -e "${GREEN}ü§ñ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–æ–¥–µ–ª—è–º:${NC}"
    echo ""
    if [ -f "$LOG_FILE" ]; then
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
        grep "–ú–æ–¥–µ–ª—å:" "$LOG_FILE" | cut -d'|' -f5 | sed 's/.*–ú–æ–¥–µ–ª—å: //' | sort | uniq -c | sort -nr
        echo ""
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–æ–¥–µ–ª–∏:"
        grep "–ú–æ–¥–µ–ª—å:" "$LOG_FILE" | tail -10 | cut -d'|' -f1,5 | sed 's/|.*–ú–æ–¥–µ–ª—å: /: /'
    else
        echo -e "${RED}‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–º–ø—Ç–æ–≤
analyze_quality() {
    echo -e "${GREEN}üìä –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–º–ø—Ç–æ–≤:${NC}"
    echo ""
    if [ -f "$LOG_FILE" ]; then
        echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –æ–ø–µ—Ä–∞—Ü–∏–π:"
        grep -E "(AI –ó–ê–ü–†–û–°|AI –û–¢–í–ï–¢|AI –û–®–ò–ë–ö–ê|AI –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨)" "$LOG_FILE" | \
        sed 's/.*üß† AI –ó–ê–ü–†–û–°:/–ó–∞–ø—Ä–æ—Å—ã:/' | \
        sed 's/.*‚úÖ AI –û–¢–í–ï–¢:/–£—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:/' | \
        sed 's/.*‚ùå AI –û–¢–í–ï–¢:/–û—à–∏–±–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤:/' | \
        sed 's/.*‚ùå AI –û–®–ò–ë–ö–ê:/–û—à–∏–±–∫–∏:/' | \
        sed 's/.*‚ö° AI –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨:/–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:/' | \
        cut -d'|' -f1 | sort | uniq -c | sort -nr
        
        echo ""
        echo "–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):"
        grep "–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:" "$LOG_FILE" | tail -10 | cut -d'|' -f1,5 | sed 's/|.*–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: /: /'
        
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):"
        grep "–¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:" "$LOG_FILE" | tail -10 | cut -d'|' -f1,5 | sed 's/|.*–¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: /: /'
    else
        echo -e "${RED}‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –ª–æ–≥–æ–≤
export_logs() {
    echo -e "${GREEN}üì§ –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤:${NC}"
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è): " export_name
    if [ -n "$export_name" ]; then
        timestamp=$(date +"%Y%m%d_%H%M%S")
        export_file="${export_name}_${timestamp}.txt"
        
        echo "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é –ª–æ–≥–∏ –≤ $export_file..."
        
        {
            echo "–≠–ö–°–ü–û–†–¢ –õ–û–ì–û–í –ü–†–û–ú–ü–¢–û–í AI - $(date)"
            echo "========================================"
            echo ""
            
            if [ -f "$VIEWER_SCRIPT" ]; then
                echo "–°–í–û–î–ö–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ò:"
                python3 "$VIEWER_SCRIPT" --action summary
                echo ""
                echo "–ü–û–°–õ–ï–î–ù–ò–ï –ü–†–û–ú–ü–¢–´:"
                python3 "$VIEWER_SCRIPT" --action prompts --count 20
                echo ""
                echo "–ü–û–°–õ–ï–î–ù–ò–ï –û–¢–í–ï–¢–´:"
                python3 "$VIEWER_SCRIPT" --action responses --count 20
                echo ""
                echo "–û–®–ò–ë–ö–ò:"
                python3 "$VIEWER_SCRIPT" --action errors --count 20
            fi
            
            echo ""
            echo "–ü–û–õ–ù–´–ï –õ–û–ì–ò:"
            echo "============"
            if [ -f "$LOG_FILE" ]; then
                cat "$LOG_FILE"
            fi
        } > "$export_file"
        
        echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ $export_file${NC}"
    else
        echo -e "${YELLOW}‚ùå –ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
main() {
    show_header
    
    if ! check_log_file; then
        return 1
    fi
    
    while true; do
        show_menu
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (0-12): " choice
        
        case $choice in
            1)
                show_tail
                ;;
            2)
                show_summary
                ;;
            3)
                show_prompts
                ;;
            4)
                show_responses
                ;;
            5)
                show_errors
                ;;
            6)
                show_performance
                ;;
            7)
                search_logs
                ;;
            8)
                show_full_prompt
                ;;
            9)
                monitor_realtime
                ;;
            10)
                show_model_stats
                ;;
            11)
                analyze_quality
                ;;
            12)
                export_logs
                ;;
            0)
                echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                break
                ;;
            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
                ;;
        esac
        
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        clear
        show_header
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
main "$@" 