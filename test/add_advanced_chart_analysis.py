import re

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
with open('backend/api/telegram_polling.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≥—Ä–∞—Ñ–∏–∫–∞
advanced_analysis_function = '''
async def analyze_trading_chart(image_path):
    """–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏."""
    import aiohttp
    import json
    import base64
    
    logger.info("[–ì–†–ê–§–ò–ö-–ê–ù–ê–õ–ò–ó] –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞...")
    
    try:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64
        with open(image_path, 'rb') as img_file:
            img_base64 = base64.b64encode(img_file.read()).decode('utf-8')
        
        # –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤
        trading_prompt = """üìä –¢—ã ‚Äî –≠–ö–°–ü–ï–†–¢ –ü–û –¢–ï–•–ù–ò–ß–ï–°–ö–û–ú–£ –ê–ù–ê–õ–ò–ó–£ –ì–†–ê–§–ò–ö–û–í! –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç —Ç–æ—Ä–≥–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ:

üéØ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –£–ö–ê–ñ–ò:
üí∞ ‚Äî –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ (–µ—Å–ª–∏ –≤–∏–¥–Ω–∞)
üìà ‚Äî –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞ (–∫–∞–∫–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞)
‚è∞ ‚Äî –¢–∞–π–º—Ñ—Ä–µ–π–º –≥—Ä–∞—Ñ–∏–∫–∞ (1m, 5m, 1h, 4h, 1D –∏ —Ç.–¥.)
üìä ‚Äî –¢–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞ (—Å–≤–µ—á–∏, –ª–∏–Ω–∏—è, –±–∞—Ä—ã)

üîç –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ò–ù–î–ò–ö–ê–¢–û–†–´ (–µ—Å–ª–∏ –µ—Å—Ç—å):
üìà ‚Äî –°–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ä–µ–¥–Ω–∏–µ (MA, EMA) - –∑–Ω–∞—á–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è
üìä ‚Äî RSI - —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∑–æ–Ω—ã
üìâ ‚Äî MACD - —Å–∏–≥–Ω–∞–ª—ã –∏ –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏  
üéØ ‚Äî Bollinger Bands - –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã
üìä ‚Äî –û–±—ä–µ–º—ã - –∞–Ω–æ–º–∞–ª–∏–∏ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
üîÑ ‚Äî –î—Ä—É–≥–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã (Stoch, Williams %R –∏ —Ç.–¥.)

üìà –ü–ê–¢–¢–ï–†–ù–´ –ò –£–†–û–í–ù–ò:
üéØ ‚Äî –£—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–µ–Ω—ã)
üìê ‚Äî –¢—Ä–µ–Ω–¥–æ–≤—ã–µ –ª–∏–Ω–∏–∏ –∏ –∫–∞–Ω–∞–ª—ã
üî∫ ‚Äî –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏, —Ñ–ª–∞–≥–∏, –≥–æ–ª–æ–≤–∞-–ø–ª–µ—á–∏ –∏ —Ç.–¥.)
üìä ‚Äî –§–∏–±–æ–Ω–∞—á—á–∏ —É—Ä–æ–≤–Ω–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
üé™ ‚Äî –Ø–ø–æ–Ω—Å–∫–∏–µ —Å–≤–µ—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã

‚ö° –†–´–ù–û–ß–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø:
üìà ‚Äî –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥ (–≤–æ—Å—Ö–æ–¥—è—â–∏–π/–Ω–∏—Å—Ö–æ–¥—è—â–∏–π/–±–æ–∫–æ–≤–æ–π)
üî• ‚Äî –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
üí• ‚Äî –ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ
üéØ ‚Äî –¢–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –∏ –≤—ã—Ö–æ–¥–∞

–ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º! –£–∫–∞–∑—ã–≤–∞–π —Ü–∏—Ñ—Ä—ã, —É—Ä–æ–≤–Ω–∏, –ø—Ä–æ—Ü–µ–Ω—Ç—ã!"""

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤
        async with aiohttp.ClientSession() as session:
            payload = {
                "model": "qwen/qwen2.5-vl-72b-instruct:free",
                "messages": [
                    {
                        "role": "user", 
                        "content": [
                            {
                                "type": "text",
                                "text": trading_prompt
                            },
                            {
                                "type": "image_url",
                                "image_url": {
                                    "url": f"data:image/jpeg;base64,{img_base64}"
                                }
                            }
                        ]
                    }
                ],
                "max_tokens": 2000
            }
            
            headers = {
                "Authorization": "Bearer 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",
                "Content-Type": "application/json"
            }
            
            logger.info("[–ì–†–ê–§–ò–ö-–ê–ù–ê–õ–ò–ó] –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ qwen2.5-vl-72b...")
            
            async with session.post("https://openrouter.ai/api/v1/chat/completions", 
                                  json=payload, headers=headers, timeout=30) as response:
                logger.info(f"[–ì–†–ê–§–ò–ö-–ê–ù–ê–õ–ò–ó] –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status}")
                
                if response.status == 200:
                    result = await response.json()
                    chart_analysis = result.get('choices', [{}])[0].get('message', {}).get('content', '')
                    logger.info(f"[–ì–†–ê–§–ò–ö-–ê–ù–ê–õ–ò–ó] –ü–æ–ª—É—á–µ–Ω –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑: {chart_analysis[:100]}...")
                    return chart_analysis
                else:
                    error_text = await response.text()
                    logger.error(f"[–ì–†–ê–§–ò–ö-–ê–ù–ê–õ–ò–ó] –û—à–∏–±–∫–∞ API: {response.status} - {error_text}")
                    return None
                    
    except Exception as e:
        logger.error(f"[–ì–†–ê–§–ò–ö-–ê–ù–ê–õ–ò–ó] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –≥—Ä–∞—Ñ–∏–∫–∞: {e}")
        return None
'''

# –í—Å—Ç–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ fetch_crypto_news
insert_position = content.find('async def cryptosud_analysis(')
content = content[:insert_position] + advanced_analysis_function + '\n' + content[insert_position:]

# –¢–µ–ø–µ—Ä—å –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é process_telegram_photo_with_crypto_detection
old_detection_logic = '''        if image_description:
            logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {image_description}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫—Ä–∏–ø—Ç–æ–∫–æ–Ω—Ç–µ–Ω—Ç
            is_crypto, crypto_terms = detect_crypto_content(image_description)
            
            logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ü–∏–∏: is_crypto={is_crypto}, terms={crypto_terms}")
            
            if is_crypto:
                logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚úÖ –û–ë–ù–ê–†–£–ñ–ï–ù –ö–†–ò–ü–¢–û–ö–û–ù–¢–ï–ù–¢! –ó–∞–ø—É—Å–∫–∞—é –ö–†–ò–ü–¢–û–°–£–î –¥–ª—è –≥—Ä—É–ø–ø—ã {chat_id}")
                logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: {crypto_terms}")
                # –ó–∞–ø—É—Å–∫–∞–µ–º –ö–†–ò–ü–¢–û–°–£–î!
                try:
                    await cryptosud_analysis(chat_id, image_description, crypto_terms)
                    logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚úÖ –ö–†–ò–ü–¢–û–°–£–î —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã {chat_id}")
                except Exception as e:
                    logger.error(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚ùå –û—à–∏–±–∫–∞ –≤ –ö–†–ò–ü–¢–û–°–£–î–ï: {e}")
            else:
                logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚ùå –ö—Ä–∏–ø—Ç–æ–∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ –≥—Ä—É–ø–ø–µ {chat_id}")'''

new_detection_logic = '''        if image_description:
            logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {image_description}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫—Ä–∏–ø—Ç–æ–∫–æ–Ω—Ç–µ–Ω—Ç
            is_crypto, crypto_terms = detect_crypto_content(image_description)
            
            logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ü–∏–∏: is_crypto={is_crypto}, terms={crypto_terms}")
            
            if is_crypto:
                logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚úÖ –û–ë–ù–ê–†–£–ñ–ï–ù –ö–†–ò–ü–¢–û–ö–û–ù–¢–ï–ù–¢! –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑...")
                logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: {crypto_terms}")
                
                # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Å–∫–∞—á–∞–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏–∑ process_telegram_photo
                import tempfile
                temp_image_path = None
                
                # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑ –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
                photos = message.get("photo", [])
                if photos:
                    photo = photos[-1]  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    file_id = photo.get("file_id")
                    if file_id:
                        temp_image_path = await download_telegram_file(file_id)
                
                # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ –≥—Ä–∞—Ñ–∏–∫–∞
                detailed_chart_analysis = None
                if temp_image_path:
                    logger.info("[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞...")
                    detailed_chart_analysis = await analyze_trading_chart(temp_image_path)
                    
                    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    try:
                        os.remove(temp_image_path)
                    except:
                        pass
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –ö–†–ò–ü–¢–û–°–£–î —Å –¥–≤—É–º—è –æ–ø–∏—Å–∞–Ω–∏—è–º–∏!
                try:
                    await cryptosud_analysis(chat_id, image_description, crypto_terms, detailed_chart_analysis)
                    logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚úÖ –ö–†–ò–ü–¢–û–°–£–î —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã {chat_id}")
                except Exception as e:
                    logger.error(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚ùå –û—à–∏–±–∫–∞ –≤ –ö–†–ò–ü–¢–û–°–£–î–ï: {e}")
            else:
                logger.info(f"[–ö–†–ò–ü–¢–û–î–ï–¢–ï–ö–¢–û–†] ‚ùå –ö—Ä–∏–ø—Ç–æ–∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ –≥—Ä—É–ø–ø–µ {chat_id}")'''

# –ó–∞–º–µ–Ω—è–µ–º –ª–æ–≥–∏–∫—É –¥–µ—Ç–µ–∫—Ü–∏–∏
content = content.replace(old_detection_logic, new_detection_logic)

# –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é cryptosud_analysis –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
old_function_signature = 'async def cryptosud_analysis(chat_id, image_description, crypto_terms):'
new_function_signature = 'async def cryptosud_analysis(chat_id, image_description, crypto_terms, detailed_chart_analysis=None):'

content = content.replace(old_function_signature, new_function_signature)

# –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤ –ø—Ä–æ–º–ø—Ç–∞—Ö
old_bull_prompt = '''        bull_prompt = f"""üêÇ –¢—ã ‚Äî –ë–´–ß–ò–ô –ö–†–ò–ü–¢–û–ê–ù–ê–õ–ò–¢–ò–ö! –û–ø—Ç–∏–º–∏—Å—Ç –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–∫ —Ä–æ—Å—Ç–∞! üìà

üéØ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥—Ä–∞—Ñ–∏–∫ –∏ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ë–´–ß–¨–ï–ô –ø–æ–∑–∏—Ü–∏–∏:
üíö ‚Äî –ö–∞–∫–∏–µ —Å–∏–≥–Ω–∞–ª—ã —Ä–æ—Å—Ç–∞ —Ç—ã –≤–∏–¥–∏—à—å?
üöÄ ‚Äî –ü–æ—á–µ–º—É —Ü–µ–Ω–∞ –ø–æ–π–¥–µ—Ç –í–í–ï–†–•?
üíé ‚Äî –ö–∞–∫–∏–µ —É—Ä–æ–≤–Ω–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏?
üìä ‚Äî –¢–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è?

üé® –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –±—É–¥—å —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º –±—ã–∫–æ–º! üêÇ

üì∑ –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞:
{image_description}

üì∞ –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
{crypto_news}"""'''

new_bull_prompt = '''        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
        full_chart_description = image_description
        if detailed_chart_analysis:
            full_chart_description += f"\\n\\nüìä –î–ï–¢–ê–õ–¨–ù–´–ô –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:\\n{detailed_chart_analysis}"
        
        bull_prompt = f"""üêÇ –¢—ã ‚Äî –ë–´–ß–ò–ô –ö–†–ò–ü–¢–û–ê–ù–ê–õ–ò–¢–ò–ö! –û–ø—Ç–∏–º–∏—Å—Ç –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–∫ —Ä–æ—Å—Ç–∞! üìà

üéØ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥—Ä–∞—Ñ–∏–∫ –∏ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ë–´–ß–¨–ï–ô –ø–æ–∑–∏—Ü–∏–∏:
üíö ‚Äî –ö–∞–∫–∏–µ —Å–∏–≥–Ω–∞–ª—ã —Ä–æ—Å—Ç–∞ —Ç—ã –≤–∏–¥–∏—à—å?
üöÄ ‚Äî –ü–æ—á–µ–º—É —Ü–µ–Ω–∞ –ø–æ–π–¥–µ—Ç –í–í–ï–†–•?
üíé ‚Äî –ö–∞–∫–∏–µ —É—Ä–æ–≤–Ω–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏?
üìä ‚Äî –¢–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è?

üé® –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –±—É–¥—å —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º –±—ã–∫–æ–º! üêÇ

üì∑ –ê–Ω–∞–ª–∏–∑ –≥—Ä–∞—Ñ–∏–∫–∞:
{full_chart_description}

üì∞ –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
{crypto_news}"""'''

content = content.replace(old_bull_prompt, new_bull_prompt)

# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –º–µ–¥–≤–µ–∂—å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
old_bear_prompt = '''        bear_prompt = f"""üêª –¢—ã ‚Äî –ú–ï–î–í–ï–ñ–ò–ô –ö–†–ò–ü–¢–û–ê–ù–ê–õ–ò–¢–ò–ö! –†–µ–∞–ª–∏—Å—Ç –∏ —Å–∫–µ–ø—Ç–∏–∫! üìâ

üéØ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥—Ä–∞—Ñ–∏–∫ –∏ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ú–ï–î–í–ï–ñ–¨–ï–ô –ø–æ–∑–∏—Ü–∏–∏:
‚ù§Ô∏è ‚Äî –ö–∞–∫–∏–µ —Å–∏–≥–Ω–∞–ª—ã –ø–∞–¥–µ–Ω–∏—è —Ç—ã –≤–∏–¥–∏—à—å?
üìâ ‚Äî –ü–æ—á–µ–º—É —Ü–µ–Ω–∞ –ø–æ–π–¥–µ—Ç –í–ù–ò–ó?
üí∏ ‚Äî –ö–∞–∫–∏–µ —Ä–∏—Å–∫–∏ –∏ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏?
üìä ‚Äî –¢–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ü–∏—é?

üé® –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º –º–µ–¥–≤–µ–¥–µ–º! üêª

üì∑ –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞:
{image_description}

üì∞ –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
{crypto_news}"""'''

new_bear_prompt = '''        bear_prompt = f"""üêª –¢—ã ‚Äî –ú–ï–î–í–ï–ñ–ò–ô –ö–†–ò–ü–¢–û–ê–ù–ê–õ–ò–¢–ò–ö! –†–µ–∞–ª–∏—Å—Ç –∏ —Å–∫–µ–ø—Ç–∏–∫! üìâ

üéØ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥—Ä–∞—Ñ–∏–∫ –∏ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ú–ï–î–í–ï–ñ–¨–ï–ô –ø–æ–∑–∏—Ü–∏–∏:
‚ù§Ô∏è ‚Äî –ö–∞–∫–∏–µ —Å–∏–≥–Ω–∞–ª—ã –ø–∞–¥–µ–Ω–∏—è —Ç—ã –≤–∏–¥–∏—à—å?
üìâ ‚Äî –ü–æ—á–µ–º—É —Ü–µ–Ω–∞ –ø–æ–π–¥–µ—Ç –í–ù–ò–ó?
üí∏ ‚Äî –ö–∞–∫–∏–µ —Ä–∏—Å–∫–∏ –∏ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏?
üìä ‚Äî –¢–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ü–∏—é?

üé® –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º –º–µ–¥–≤–µ–¥–µ–º! üêª

üì∑ –ê–Ω–∞–ª–∏–∑ –≥—Ä–∞—Ñ–∏–∫–∞:
{full_chart_description}

üì∞ –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
{crypto_news}"""'''

content = content.replace(old_bear_prompt, new_bear_prompt)

# –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏ –º–∞–∫—Ä–æ –∞–Ω–∞–ª–∏–∑
content = content.replace('üì∑ –û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞:\\n{image_description}', 'üì∑ –ê–Ω–∞–ª–∏–∑ –≥—Ä–∞—Ñ–∏–∫–∞:\\n{full_chart_description}')

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
with open('backend/api/telegram_polling.py', 'w', encoding='utf-8') as f:
    f.write(content)

print("–î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ—Ä–≥–æ–≤—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤ –≤ –ö–†–ò–ü–¢–û–°–£–î!")