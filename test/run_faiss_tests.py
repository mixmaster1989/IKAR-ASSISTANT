#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã FAISS.
"""

import asyncio
import sys
import os
from datetime import datetime

def print_banner():
    """–í—ã–≤–æ–¥–∏—Ç –±–∞–Ω–Ω–µ—Ä —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 70)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ FAISS –ò –ü–ï–†–ï–ó–ê–ü–ò–°–ò –ü–ê–ú–Ø–¢–ò")
    print("=" * 70)
    print(f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å OpenRouter")
    print("=" * 70)

async def run_basic_test():
    """–ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞"""
    print("\nüöÄ –ó–ê–ü–£–°–ö –ë–ê–ó–û–í–û–ì–û –¢–ï–°–¢–ê...")
    print("-" * 40)
    
    try:
        from test_faiss_full_system import FAISSFullSystemTest
        test = FAISSFullSystemTest()
        result = await test.run_all_tests()
        return result
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")
        return False

async def run_stress_test():
    """–ó–∞–ø—É—Å–∫ —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç–∞"""
    print("\nüöÄ –ó–ê–ü–£–°–ö –°–¢–†–ï–°–°-–¢–ï–°–¢–ê...")
    print("-" * 40)
    
    try:
        from test_faiss_stress import FAISSStressTest
        test = FAISSStressTest()
        result = await test.run_stress_tests()
        return result
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç–∞: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ —Ç–µ—Å—Ç–æ–≤
    test_files = [
        "test_faiss_full_system.py",
        "test_faiss_stress.py"
    ]
    
    missing_files = []
    for file in test_files:
        if not os.path.exists(file):
            missing_files.append(file)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã —Ç–µ—Å—Ç–æ–≤: {', '.join(missing_files)}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Ç–µ—Å—Ç–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    basic_success = await run_basic_test()
    stress_success = await run_stress_test()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 70)
    
    if basic_success:
        print("‚úÖ –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç: –ü–†–û–ô–î–ï–ù")
    else:
        print("‚ùå –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç: –ü–†–û–í–ê–õ–ï–ù")
    
    if stress_success:
        print("‚úÖ –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç: –ü–†–û–ô–î–ï–ù")
    else:
        print("‚ùå –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç: –ü–†–û–í–ê–õ–ï–ù")
    
    if basic_success and stress_success:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("–°–∏—Å—Ç–µ–º–∞ FAISS –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –ø–∞–º—è—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        sys.exit(0)
    else:
        print("\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main()) 