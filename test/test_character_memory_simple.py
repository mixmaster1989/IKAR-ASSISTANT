#!/usr/bin/env python3
"""
üß† –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ü–ê–ú–Ø–¢–ò –•–ê–†–ê–ö–¢–ï–†–ê
–õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç –ë–î
"""

import time
import json
from pathlib import Path

class SimpleCharacterMemory:
    """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞"""
    
    def __init__(self):
        self.character_memory = {}  # {chat_id: {"personality_traits": [], "key_events": [], "relationships": {}, "last_update": timestamp}}
    
    def _get_character_memory(self, chat_id: str) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –¥–ª—è —á–∞—Ç–∞"""
        if chat_id not in self.character_memory:
            self.character_memory[chat_id] = {
                "personality_traits": [],
                "key_events": [],
                "relationships": {},
                "last_update": time.time()
            }
        return self.character_memory[chat_id]

    def _update_character_memory(self, chat_id: str, message_text: str, response: str):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è"""
        memory = self._get_character_memory(chat_id)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        memory["last_update"] = time.time()
        
        # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–µ—Ä—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
        message_lower = message_text.lower()
        response_lower = response.lower()
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        if any(word in message_lower for word in ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–µ—á–∞–ª—å–Ω–æ", "—Ç–æ—Å–∫–∞", "—É—Å—Ç–∞–ª", "–≥—Ä—É—Å—Ç–Ω—ã–π"]):
            if "–º–µ–ª–∞–Ω—Ö–æ–ª–∏—á–Ω—ã–π" not in memory["personality_traits"]:
                memory["personality_traits"].append("–º–µ–ª–∞–Ω—Ö–æ–ª–∏—á–Ω—ã–π")
        
        if any(word in message_lower for word in ["–≤–µ—Å–µ–ª–æ", "—Ä–∞–¥–æ—Å—Ç—å", "—Å–º–µ—Ö", "–æ–ø—Ç–∏–º–∏—Å—Ç", "–æ–ø—Ç–∏–º–∏—Å—Ç–æ–º"]):
            if "–æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π" not in memory["personality_traits"]:
                memory["personality_traits"].append("–æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π")
        
        if any(word in message_lower for word in ["–∑–ª–æ—Å—Ç—å", "—Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ", "–±–µ—Å–∏—Ç", "–∞–≥—Ä–µ—Å—Å–∏—è", "—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—à—å"]):
            if "—Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π" not in memory["personality_traits"]:
                memory["personality_traits"].append("—Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π")
        
        if any(word in message_lower for word in ["—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è", "—Å–º—ã—Å–ª", "–∂–∏–∑–Ω—å", "–≥–ª—É–±–æ–∫–æ", "—Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤—É–π"]):
            if "—Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π" not in memory["personality_traits"]:
                memory["personality_traits"].append("—Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π")
        
        if any(word in message_lower for word in ["–∫—Ä–∏–ø—Ç–∞", "–±–∏—Ç–∫–æ–∏–Ω", "—Ç—Ä–µ–π–¥–∏–Ω–≥", "–¥–µ–Ω—å–≥–∏", "–∫—Ä–∏–ø—Ç–µ"]):
            if "—Ç–µ—Ö–Ω–∞—Ä—å" not in memory["personality_traits"]:
                memory["personality_traits"].append("—Ç–µ—Ö–Ω–∞—Ä—å")
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ä—Ç (—Ö—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
        if len(memory["personality_traits"]) > 5:
            memory["personality_traits"] = memory["personality_traits"][-5:]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        event = f"–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ: {message_text[:50]}..."
        if event not in memory["key_events"]:
            memory["key_events"].append(event)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π (—Ö—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
        if len(memory["key_events"]) > 10:
            memory["key_events"] = memory["key_events"][-10:]

    def _build_character_context(self, chat_id: str) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π"""
        memory = self._get_character_memory(chat_id)
        
        # –ï—Å–ª–∏ –ø–∞–º—è—Ç—å –ø—É—Å—Ç–∞—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if not memory["personality_traits"] and not memory["key_events"]:
            return ""
        
        context_parts = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if memory["personality_traits"]:
            traits = ", ".join(memory["personality_traits"][-3:])  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —á–µ—Ä—Ç—ã
            context_parts.append(f"–¢—ã –ø—Ä–æ—è–≤–ª—è–µ—à—å —Å–µ–±—è –∫–∞–∫: {traits}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if memory["relationships"]:
            relationship_desc = []
            for user, relation in list(memory["relationships"].items())[:3]:  # –ú–∞–∫—Å–∏–º—É–º 3 –æ—Ç–Ω–æ—à–µ–Ω–∏—è
                relationship_desc.append(f"–∫ {user}: {relation}")
            if relationship_desc:
                context_parts.append(f"–¢–≤–æ–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è: {', '.join(relationship_desc)}")
        
        if context_parts:
            return f"\n\nüé≠ –ö–û–ù–¢–ï–ö–°–¢ –¢–í–û–ï–ì–û –•–ê–†–ê–ö–¢–ï–†–ê:\n" + "\n".join(context_parts) + "\n\n–í–ê–ñ–ù–û: –ù–µ —É–ø–æ–º–∏–Ω–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ—à–ª—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –æ—Ç–≤–µ—Ç–µ. –ü—Ä–æ—Å—Ç–æ –±—É–¥—å —Å–æ–±–æ–π, —É—á–∏—Ç—ã–≤–∞—è —Å–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä."
        
        return ""

def test_character_memory():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞"""
    print("üß† –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ü–ê–ú–Ø–¢–ò –•–ê–†–ê–ö–¢–ï–†–ê")
    print("=" * 60)
    
    memory_system = SimpleCharacterMemory()
    chat_id = "test_chat_123"
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
    test_messages = [
        "–±–æ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",
        "–±–æ—Ç, —á—Ç–æ –¥—É–º–∞–µ—à—å –æ –∫—Ä–∏–ø—Ç–µ?",
        "–±–æ—Ç, —Ç—ã –≥—Ä—É—Å—Ç–Ω—ã–π —Å–µ–≥–æ–¥–Ω—è",
        "–±–æ—Ç, —Ä–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç",
        "–±–æ—Ç, –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
        "–±–æ—Ç, —Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤—É–π –æ –∂–∏–∑–Ω–∏",
        "–±–æ—Ç, —Ç—ã —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—à—å –º–µ–Ω—è",
        "–±–æ—Ç, –±—É–¥—å –æ–ø—Ç–∏–º–∏—Å—Ç–æ–º"
    ]
    
    print("üìù –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:")
    print()
    
    for i, message in enumerate(test_messages, 1):
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ {i}: {message}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—É–¥–µ—Ç AI)
        fake_response = f"–û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {i}: {message}"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–º—è—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
        memory_system._update_character_memory(chat_id, message, fake_response)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–º—è—Ç—å
        memory = memory_system._get_character_memory(chat_id)
        print(f"   üìö –ü–∞–º—è—Ç—å: {len(memory['key_events'])} —Å–æ–±—ã—Ç–∏–π, {len(memory['personality_traits'])} —á–µ—Ä—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞")
        if memory['personality_traits']:
            print(f"   üé≠ –ß–µ—Ä—Ç—ã: {', '.join(memory['personality_traits'])}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
        context = memory_system._build_character_context(chat_id)
        if context:
            print(f"   üé≠ –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context[:150]}...")
        else:
            print(f"   üé≠ –ö–æ–Ω—Ç–µ–∫—Å—Ç: (–ø—É—Å—Ç–æ–π)")
        print()
    
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("- –ë–æ—Ç –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å —Å–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä")
    print("- –ù–µ –±—É–¥–µ—Ç —É–ø–æ–º–∏–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ—à–ª—ã–µ —Å–æ–±—ã—Ç–∏—è")
    print("- –ë—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç")
    print("- –°–æ—Ö—Ä–∞–Ω–∏—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø–∞–º—è—Ç—å
    final_memory = memory_system._get_character_memory(chat_id)
    print(f"\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–ê–ú–Ø–¢–¨:")
    print(f"–ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞: {final_memory['personality_traits']}")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π: {len(final_memory['key_events'])}")

if __name__ == "__main__":
    test_character_memory() 