#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ "–±–æ—Ç"
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ JSON —Å IMAGE! –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from api.group_bot_trigger import process_bot_trigger
from memory.sqlite import SQLiteStorage

async def test_image_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–ë–†–ê–ë–û–¢–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô")
    print("=" * 50)
    print("üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ JSON —Å IMAGE! –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    sqlite_storage = SQLiteStorage()
    
    # –¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞
    chat_id = "test_image_fix_group"
    user_id = "test_user_image"
    
    print(f"üìù –¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞: {chat_id}")
    print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")
    print()
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("üìù –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("-" * 40)
    
    context_messages = [
        ("user_1", "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!"),
        ("user_2", "–ü—Ä–∏–≤–µ—Ç!"),
        ("user_3", "–ö–∞–∫ –¥–µ–ª–∞?"),
        ("user_1", "–ù–æ—Ä–º–∞–ª—å–Ω–æ"),
        ("user_2", "–£ –º–µ–Ω—è —Ç–æ–∂–µ"),
    ]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    for i, (msg_user_id, content) in enumerate(context_messages):
        sqlite_storage.save_group_message(
            chat_id=chat_id,
            message_id=i + 1,
            user_id=msg_user_id,
            msg_type="text",
            content=content,
            timestamp=1700000000 + i * 60
        )
        sqlite_storage.set_group_user_name(chat_id, msg_user_id, f"User_{msg_user_id}")
        print(f"üë§ User_{msg_user_id}: {content}")
    
    print()
    print("ü§ñ –ö—Ç–æ-—Ç–æ –ø–∏—à–µ—Ç '–±–æ—Ç':")
    print("-" * 20)
    
    try:
        response = await process_bot_trigger(chat_id, "–±–æ—Ç", user_id)
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –±–æ—Ç")
        print(f"ü§ñ –ë–æ—Ç: {response}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        print()
        print("üìä –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ JSON —Å IMAGE! –≤ –æ—Ç–≤–µ—Ç–µ
        if "IMAGE!" in response:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: JSON —Å IMAGE! –æ—Å—Ç–∞–ª—Å—è –≤ –æ—Ç–≤–µ—Ç–µ!")
            print("   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚úÖ –•–æ—Ä–æ—à–æ: JSON —Å IMAGE! –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ —É–¥–∞–ª–µ–Ω –∏–∑ –æ—Ç–≤–µ—Ç–∞")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞
        response_length = len(response)
        print(f"üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {response_length} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if response_length > 100:
            print("‚úÖ –û—Ç–≤–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–π")
        else:
            print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π (–≤–æ–∑–º–æ–∂–Ω–æ, fallback)")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ—Å—Ç—å
        context_keywords = ["–ø—Ä–∏–≤–µ—Ç", "–¥–µ–ª–∞", "–Ω–æ—Ä–º–∞–ª—å–Ω–æ"]
        context_matches = sum(1 for keyword in context_keywords if keyword in response.lower())
        
        if context_matches >= 1:
            print("‚úÖ –ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç")
        else:
            print("‚ö†Ô∏è –ë–æ—Ç –Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    print("üßπ –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
    await clear_test_data(sqlite_storage, chat_id)
    
    print()
    print("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print()
    print("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç—Ä–∏–≥–≥–µ—Ä '–±–æ—Ç'")
    print("‚úÖ JSON —Å IMAGE! —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ñ–æ–Ω–µ")

async def clear_test_data(sqlite_storage, chat_id):
    """–û—á–∏—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    try:
        import sqlite3
        conn = sqlite3.connect(sqlite_storage.db_path)
        cursor = conn.cursor()
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        cursor.execute('DELETE FROM group_history WHERE chat_id = ?', (chat_id,))
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–º–µ–Ω–∞
        cursor.execute('DELETE FROM group_user_names WHERE chat_id = ?', (chat_id,))
        
        conn.commit()
        conn.close()
        
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")

if __name__ == "__main__":
    asyncio.run(test_image_fix()) 