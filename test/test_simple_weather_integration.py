#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ–≥–æ–¥—ã
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def test_simple_weather_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –ø–æ–≥–æ–¥—ã"""
    print("üå§Ô∏è –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ü–û–ò–°–ö–ê –ü–û–ì–û–î–´")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from ikar_internet_integration import IKARInternetIntegration
        from internet_intelligence_system import InternetIntelligenceSystem
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        test_messages = [
            "–±–æ—Ç, –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è –≤ —à–∞—Ö—Ç–∞—Ö?",
            "–±–æ—Ç, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –º–æ—Å–∫–≤–µ",
            "–±–æ—Ç, –ø–æ–≥–æ–¥–∞ –∑–∞–≤—Ç—Ä–∞ –≤ —Å–ø–±",
            "–±–æ—Ç, –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ —Ä–æ—Å—Ç–æ–≤–µ –Ω–∞ –¥–æ–Ω—É"
        ]
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Å–∏—Å—Ç–µ–º
        system = InternetIntelligenceSystem()
        integration = IKARInternetIntegration()
        
        for message in test_messages:
            print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message}'")
            print("-" * 40)
            
            try:
                # –û—á–∏—â–∞–µ–º –∑–∞–ø—Ä–æ—Å
                cleaned_query = integration._clean_search_query(message)
                print(f"üìù –û—á–∏—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: '{cleaned_query}'")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ "–±–æ—Ç" —É–±—Ä–∞–Ω –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
                if "–±–æ—Ç" in cleaned_query.lower():
                    print("‚ùå –û–®–ò–ë–ö–ê: '–±–æ—Ç' –Ω–µ —É–±—Ä–∞–Ω –∏–∑ –∑–∞–ø—Ä–æ—Å–∞!")
                else:
                    print("‚úÖ '–±–æ—Ç' —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω –∏–∑ –∑–∞–ø—Ä–æ—Å–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–≥–æ–¥–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                weather_keywords = ["–ø–æ–≥–æ–¥–∞", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–≥—Ä–∞–¥—É—Å"]
                has_weather_keywords = any(keyword in cleaned_query.lower() for keyword in weather_keywords)
                
                if has_weather_keywords:
                    print("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–≥–æ–¥–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞")
                else:
                    print("‚ö†Ô∏è  –ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–≥–æ–¥–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
                city = system._extract_city_from_query(cleaned_query)
                
                if city:
                    print(f"üèôÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω –≥–æ—Ä–æ–¥: '{city}'")
                else:
                    print("‚ö†Ô∏è  –ì–æ—Ä–æ–¥ –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ–∏—Å–∫–∞
                weather_keywords = ["–ø–æ–≥–æ–¥–∞", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–≥—Ä–∞–¥—É—Å", "—Ö–æ–ª–æ–¥–Ω–æ", "—Ç–µ–ø–ª–æ", "–¥–æ–∂–¥—å", "—Å–Ω–µ–≥"]
                needs_internet = any(keyword in cleaned_query.lower() for keyword in weather_keywords)
                
                if needs_internet:
                    print("‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ–∏—Å–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º")
                    
                    # –í—ã–ø–æ–ª–Ω—è–µ–º –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ (—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞)
                    print("üîç –í—ã–ø–æ–ª–Ω—è–µ–º –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫...")
                    results = await system.search_internet(cleaned_query, max_total_results=3)
                    
                    if results:
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
                        for i, result in enumerate(results[:2], 1):
                            print(f"   {i}. {result.title}")
                            print(f"      –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result.relevance_score:.2f}")
                            if result.relevance_score > 0.7:
                                print(f"      ‚úÖ –í—ã—Å–æ–∫–∞—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å!")
                    else:
                        print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                else:
                    print("‚ö†Ô∏è  –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ–∏—Å–∫ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
        
        await system.close()
        print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_simple_weather_integration()) 