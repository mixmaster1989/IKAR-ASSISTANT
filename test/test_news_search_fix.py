#!/usr/bin/env python3
"""
üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ü–û–ò–°–ö–ê –ù–û–í–û–°–¢–ï–ô
–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –æ –Ω–æ–≤–æ—Å—Ç—è—Ö
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

async def test_news_search_fix():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ü–û–ò–°–ö–ê –ù–û–í–û–°–¢–ï–ô")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        from ikar_internet_integration import IKARInternetIntegration
        from internet_intelligence_system import InternetIntelligenceSystem
        
        print("‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤
        print("\nüîß –¢–ï–°–¢ 1: –û—á–∏—Å—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤")
        print("-" * 40)
        
        integration = IKARInternetIntegration()
        
        test_queries = [
            "–±–æ—Ç, –∫–∞–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏?",
            "–±–æ—Ç, —á—Ç–æ –Ω–æ–≤–æ–≥–æ?",
            "–±–æ—Ç, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –º–∏—Ä–µ?",
            "–±–æ—Ç, —Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã",
            "–±–æ—Ç, –ø–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è"
        ]
        
        for query in test_queries:
            needs_search, search_query, confidence = integration.needs_internet_search(query)
            cleaned_query = integration._clean_search_query(query)
            print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª: '{query}'")
            print(f"   –û—á–∏—â–µ–Ω–Ω—ã–π: '{cleaned_query}'")
            print(f"   –ù—É–∂–µ–Ω –ø–æ–∏—Å–∫: {needs_search} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f})")
            print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
        print("\nüîç –¢–ï–°–¢ 2: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π")
        print("-" * 40)
        
        system = InternetIntelligenceSystem()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
        news_query = "–ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å–µ–≥–æ–¥–Ω—è"
        print(f"–ü–æ–∏—Å–∫: '{news_query}'")
        
        results = await system.search_internet(news_query, max_total_results=10)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        for i, result in enumerate(results[:5], 1):
            print(f"   {i}. {result.title}")
            print(f"      URL: {result.url}")
            print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {result.source}")
            print(f"      –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result.relevance_score:.2f}")
            print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        print("\nüß† –¢–ï–°–¢ 3: –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞")
        print("-" * 40)
        
        user_query = "–±–æ—Ç, –∫–∞–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏?"
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å: '{user_query}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –ø–æ–∏—Å–∫
        needs_search, search_query, confidence = integration.needs_internet_search(user_query)
        print(f"   –ù—É–∂–µ–Ω –ø–æ–∏—Å–∫: {needs_search} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f})")
        print(f"   –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: '{search_query}'")
        
        if needs_search:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            internet_info = await system.get_internet_intelligence(search_query)
            print(f"   –ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {internet_info.confidence_score:.2f})")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(internet_info.sources)}")
            print(f"   AI —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è: {internet_info.ai_summary[:200]}...")
            print(f"   –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã: {len(internet_info.key_points)}")
        
        print("\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        if needs_search and confidence > 0.7:
            print("‚úÖ –°–ò–°–¢–ï–ú–ê –ü–†–ê–í–ò–õ–¨–ù–û –†–ê–°–ü–û–ó–ù–ê–ï–¢ –ó–ê–ü–†–û–°–´ –û –ù–û–í–û–°–¢–Ø–•!")
        else:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê –° –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï–ú –ó–ê–ü–†–û–°–û–í –û –ù–û–í–û–°–¢–Ø–•")
        
        if results and len(results) > 0:
            print("‚úÖ –°–ò–°–¢–ï–ú–ê –ù–ê–•–û–î–ò–¢ –ê–ö–¢–£–ê–õ–¨–ù–´–ï –ù–û–í–û–°–¢–ò!")
        else:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê –° –ü–û–ò–°–ö–û–ú –ù–û–í–û–°–¢–ï–ô")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_news_search_fix()) 