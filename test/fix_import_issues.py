#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–æ–º –º–æ–¥—É–ª–µ–π
"""

import subprocess
import sys
import importlib

def force_reinstall_package(package_name):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞–∫–µ—Ç"""
    try:
        print(f"üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {package_name}...")
        result = subprocess.run([
            sys.executable, "-m", "pip", "install", 
            "--force-reinstall", "--no-cache-dir", package_name
        ], capture_output=True, text=True, check=True)
        print(f"‚úÖ {package_name} –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package_name}: {e.stderr}")
        return False

def install_with_user_flag(package_name):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞–∫–µ—Ç —Å —Ñ–ª–∞–≥–æ–º --user"""
    try:
        print(f"üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {package_name} —Å --user...")
        result = subprocess.run([
            sys.executable, "-m", "pip", "install", 
            "--user", "--no-cache-dir", package_name
        ], capture_output=True, text=True, check=True)
        print(f"‚úÖ {package_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å --user")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package_name}: {e.stderr}")
        return False

def check_module(module_name):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è"""
    try:
        importlib.import_module(module_name)
        return True
    except ImportError:
        return False

def main():
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° –ò–ú–ü–û–†–¢–û–ú")
    print("=" * 50)
    
    # –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏
    problematic_modules = [
        ("newspaper3k", "newspaper3k"),
        ("attrs", "attrs"),
        ("langdetect", "langdetect")
    ]
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
    for module_name, package_name in problematic_modules:
        if check_module(module_name):
            print(f"‚úÖ {module_name} - —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå {module_name} - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    print("\nüîÑ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï...")
    print("=" * 50)
    
    for module_name, package_name in problematic_modules:
        if not check_module(module_name):
            print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª—è—é {module_name}...")
            
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫—É
            if force_reinstall_package(package_name):
                if check_module(module_name):
                    print(f"‚úÖ {module_name} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
                    continue
            
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø—Ä–æ–±—É–µ–º —Å --user
            if install_with_user_flag(package_name):
                if check_module(module_name):
                    print(f"‚úÖ {module_name} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —Å --user!")
                    continue
            
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å {module_name}")
    
    print("\nüîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê...")
    print("=" * 50)
    
    all_working = True
    for module_name, package_name in problematic_modules:
        if check_module(module_name):
            print(f"‚úÖ {module_name} - —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå {module_name} - –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            all_working = False
    
    if all_working:
        print("\nüéâ –í–°–ï –ú–û–î–£–õ–ò –ò–°–ü–†–ê–í–õ–ï–ù–´!")
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª")
        print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PYTHONPATH")
        print("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥—É–ª–∏ –≤—Ä—É—á–Ω—É—é")

if __name__ == "__main__":
    main() 