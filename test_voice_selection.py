#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–æ–≤ ElevenLabs
"""
import asyncio
import os
from dotenv import load_dotenv
from pathlib import Path

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
env_path = Path(__file__).parent / ".env"
if env_path.exists():
    load_dotenv(env_path)

from backend.voice.tts import TextToSpeech

async def test_voice_selection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –≥–æ–ª–æ—Å–æ–≤"""
    
    print("üé§ –¢–ï–°–¢ –í–´–ë–û–†–ê –ì–û–õ–û–°–û–í ELEVENLABS")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("üìã –ù–ê–°–¢–†–û–ô–ö–ò:")
    print(f"ELEVEN_VOICE_ID_MALE: {os.getenv('ELEVEN_VOICE_ID_MALE')}")
    print(f"ELEVEN_VOICE_ID_FEMALE: {os.getenv('ELEVEN_VOICE_ID_FEMALE')}")
    print(f"ELEVEN_VOICE_ID: {os.getenv('ELEVEN_VOICE_ID')}")
    print()
    
    # –°–æ–∑–¥–∞–µ–º TTS
    tts = TextToSpeech()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –≥–æ–ª–æ—Å–æ–≤
    test_cases = [
        {"gender": "male", "lang": "ru"},
        {"gender": "female", "lang": "ru"},
        {"gender": "male", "lang": "en"},
        {"gender": "female", "lang": "en"},
    ]
    
    for i, voice_config in enumerate(test_cases, 1):
        print(f"üß™ –¢–ï–°–¢ {i}: {voice_config}")
        
        # –ü–æ–ª—É—á–∞–µ–º voice_id
        voice_id = tts._map_voice_id_by_gender(voice_config)
        print(f"   ‚Üí Voice ID: {voice_id}")
        
        if voice_id:
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω –≥–æ–ª–æ—Å")
        else:
            print(f"   ‚ùå –ì–æ–ª–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print()

if __name__ == "__main__":
    asyncio.run(test_voice_selection())
