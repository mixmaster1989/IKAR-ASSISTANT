#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏
"""

import requests
import time
import random

def get_proxies_from_api():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–∫—Å–∏ –∏–∑ –ø—É–±–ª–∏—á–Ω—ã—Ö API"""
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –∏–∑ API...")
    
    proxies = []
    
    try:
        # API 1: proxylist.geonode.com
        url = "https://proxylist.geonode.com/api/proxy-list?limit=10&page=1&sort_by=lastChecked&sort_type=desc&protocols=http%2Chttps&anonymityLevel=elite&country=US"
        resp = requests.get(url, timeout=10)
        if resp.ok:
            data = resp.json()
            for proxy in data.get('data', []):
                ip = proxy.get('ip')
                port = proxy.get('port')
                if ip and port:
                    proxies.append(f"{ip}:{port}")
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(proxies)} –ø—Ä–æ–∫—Å–∏ –∏–∑ geonode")
    except:
        pass
    
    try:
        # API 2: proxyscrape.com
        url = "https://api.proxyscrape.com/v2/?request=get&protocol=http&timeout=10000&country=all&ssl=all&anonymity=all"
        resp = requests.get(url, timeout=10)
        if resp.ok:
            lines = resp.text.strip().split('\n')
            for line in lines:
                if ':' in line and line.strip():
                    proxies.append(line.strip())
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(lines)} –ø—Ä–æ–∫—Å–∏ –∏–∑ proxyscrape")
    except:
        pass
    
    return list(set(proxies))  # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã

def test_proxy(proxy):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∫—Å–∏"""
    try:
        proxies = {
            'http': f'http://{proxy}',
            'https': f'http://{proxy}'
        }
        
        # –¢–µ—Å—Ç 1: httpbin.org
        resp = requests.get('http://httpbin.org/ip', proxies=proxies, timeout=10)
        if resp.ok:
            print(f"‚úÖ {proxy} - —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
            
    except Exception as e:
        pass
    
    return False

def find_free_proxies():
    """–ò—â–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–∫—Å–∏"""
    print("üîç –ü–æ–∏—Å–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–∫—Å–∏ –∏–∑ API
    proxy_list = get_proxies_from_api()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–∫—Å–∏
    static_proxies = [
        "103.149.162.194:80",
        "103.149.162.195:80", 
        "103.149.162.196:80",
        "103.149.162.197:80",
        "103.149.162.198:80",
        "103.149.162.199:80",
        "103.149.162.200:80",
        "103.149.162.201:80",
        "103.149.162.202:80",
        "103.149.162.203:80",
        "103.149.162.204:80",
        "103.149.162.205:80",
        "103.149.162.206:80",
        "103.149.162.207:80",
        "103.149.162.208:80",
        "103.149.162.209:80",
        "103.149.162.210:80",
        "103.149.162.211:80",
        "103.149.162.212:80",
        "103.149.162.213:80"
    ]
    
    proxy_list.extend(static_proxies)
    proxy_list = list(set(proxy_list))  # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    
    print(f"üîç –í—Å–µ–≥–æ –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {len(proxy_list)}")
    
    working_proxies = []
    
    for i, proxy in enumerate(proxy_list[:20]):  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 20
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º {i+1}/{min(20, len(proxy_list))}: {proxy}...")
        if test_proxy(proxy):
            working_proxies.append(proxy)
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–∫—Å–∏: {proxy}")
            break  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º —Ä–∞–±–æ—á–µ–º
        time.sleep(1)
    
    return working_proxies

def test_elevenlabs_with_proxy(proxy):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç ElevenLabs —Å –ø—Ä–æ–∫—Å–∏"""
    print(f"üé§ –¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs —Å –ø—Ä–æ–∫—Å–∏ {proxy}...")
    
    try:
        proxies = {
            'http': f'http://{proxy}',
            'https': f'http://{proxy}'
        }
        
        # –¢–µ—Å—Ç ElevenLabs API
        url = "https://api.elevenlabs.io/v1/voices"
        headers = {"xi-api-key": "sk_0da4451bbc1b4513626d8dabfaa3dd75e4672d478e23ffbc"}
        
        resp = requests.get(url, headers=headers, proxies=proxies, timeout=15, verify=False)
        
        if resp.ok:
            print(f"üéâ ElevenLabs —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–æ–∫—Å–∏ {proxy}!")
            return True
        else:
            print(f"‚ùå ElevenLabs –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–æ–∫—Å–∏ {proxy}: {resp.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å –ø—Ä–æ–∫—Å–∏ {proxy}: {e}")
    
    return False

if __name__ == '__main__':
    print("üöÄ –ü–æ–∏—Å–∫ –ø—Ä–æ–∫—Å–∏ –¥–ª—è ElevenLabs...")
    
    # –ò—â–µ–º –ø—Ä–æ–∫—Å–∏
    working_proxies = find_free_proxies()
    
    if working_proxies:
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(working_proxies)} —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ–∫—Å–∏:")
        for proxy in working_proxies:
            print(f"  - {proxy}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å ElevenLabs
        for proxy in working_proxies:
            if test_elevenlabs_with_proxy(proxy):
                print(f"\nüéâ –£–°–ü–ï–•! –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ–∫—Å–∏: {proxy}")
                print(f"–î–æ–±–∞–≤—å –≤ .env: ELEVEN_PROXIES=http://{proxy}")
                break
    else:
        print("‚ùå –†–∞–±–æ—á–∏–µ –ø—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
