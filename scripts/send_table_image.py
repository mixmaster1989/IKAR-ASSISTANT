#!/usr/bin/env python3
import os
import sys
import asyncio
from typing import Optional

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
CURRENT_DIR = os.path.dirname(__file__)
PROJECT_ROOT = os.path.abspath(os.path.join(CURRENT_DIR, '..'))
if PROJECT_ROOT not in sys.path:
    sys.path.append(PROJECT_ROOT)

from backend.utils.table_generator import send_table_to_telegram

def read_env_value(*keys: str) -> Optional[str]:
    """–ß–∏—Ç–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏–∑ —Ñ–∞–π–ª–∞ .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞."""
    # 1) –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∏–∑ env
    for k in keys:
        val = os.getenv(k)
        if val:
            return val
    # 2) –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å .env –≤—Ä—É—á–Ω—É—é
    env_path = os.path.join(PROJECT_ROOT, '.env')
    if os.path.exists(env_path):
        try:
            with open(env_path, 'r', encoding='utf-8') as f:
                for line in f:
                    line = line.strip()
                    if not line or line.startswith('#') or '=' not in line:
                        continue
                    name, value = line.split('=', 1)
                    name = name.strip()
                    value = value.strip().strip('"').strip("'")
                    if name in keys and value:
                        return value
        except Exception:
            pass
    return None

# –¢–µ–∫—Å—Ç —Å —Ç–∞–±–ª–∏—Ü–µ–π
TABLE_MARKDOWN = """| –ü–∞—Ä–∞–º–µ—Ç—Ä | **Evotor** | **Atol Sigma** |
|----------|------------|----------------|
| **–≠–∫—Ä–∞–Ω** | 5‚Äë7‚Ä≥ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç) / 10‚Ä≥ (HoReCa) | 7‚Ä≥ / 8‚Ä≥ / 10‚Ä≥ |
| **–ü–µ—á–∞—Ç–Ω–∞—è –≥–æ–ª–æ–≤–∫–∞** | –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ç–µ—Ä–º–æ–ø—Ä–∏–Ω—Ç–µ—Ä‚ÄëAPS SS205‚ÄëV4‚ÄëLV (57 –º–º) | –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø—Ä–∏–Ω—Ç–µ—Ä‚Äë–ø—Ä–æ—Ç–æ—Ç–∏–ø —Å –∞–≤—Ç–æ–æ—Ç—Ä–µ–∑—á–∏–∫–æ–º |
| **USB‚Äë–ø–æ—Ä—Ç—ã** | 1‚Äì6 –ø–æ—Ä—Ç–æ–≤ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–æ–¥–µ–ª–∏) | 4‚Äì6 –ø–æ—Ä—Ç–æ–≤ |
| **Wi‚ÄëFi / GSM** | –î–∞ –Ω–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª—è—Ö | –î–∞ –Ω–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª—è—Ö |
| **–ë–∞—Ç–∞—Ä–µ—è** | –î–æ 12 —á –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏ (–º–æ–¥–µ–ª–∏ —Å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–æ–º) | –î–æ 5‚Äì8 —á –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏ |
| **–§–∏—Å–∫–∞–ª—å–Ω—ã–π –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å** | –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–π –ø–æ –≤—ã–±–æ—Ä—É (FN15/FN36) | –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–π –ø–æ –≤—ã–±–æ—Ä—É |
| **–¶–µ–Ω–∞ –±–µ–∑ FN** | –û—Ç 24 900 ‚ÇΩ –¥–æ 38 900 ‚ÇΩ* | –û—Ç 21 500 ‚ÇΩ –¥–æ 33 000 ‚ÇΩ* |"""

CAPTION = """üìå **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞—Å—Å–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º Evotor –∏ Atol Sigma**

*—Ü–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –§–ù –∏ –Ω–∞–ª–æ–≥–æ–≤—ã—Ö —É—Å–ª—É–≥*

**Evotor** - –º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Å—Ç–æ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
**Atol Sigma** - –≥–∏–±–∫–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤ –∏ —ç–∫–æ–Ω–æ–º–∏—á–Ω–æ—Å—Ç—å

ü§ù **–í—ã–±–æ—Ä:**
‚Ä¢ –ö–∏–æ—Å–∫/–º–∞–ª–∞—è —Ç–æ—á–∫–∞ ‚Üí Evotor 5/7.x
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Ç–µ–π–ª ‚Üí Atol Sigma 8/10  
‚Ä¢ HoReCa ‚Üí Evotor 10

> _–ò–∫–∞—Ä —Å–æ–≤–µ—Ç—É–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç –∏ –ø–µ—Ä–∏—Ñ–µ—Ä–∏—é_"""

async def main():
    chat_id = read_env_value('TELEGRAM_CHANNEL_ID', 'IKAR_TELEGRAM_GROUP_ID', 'TELEGRAM_GROUP_ID')
    if not chat_id:
        raise SystemExit('No chat_id found in env or .env')
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏–º —Ç–æ–∫–µ–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    bot_token = read_env_value('TELEGRAM_BOT_TOKEN', 'BOT_TOKEN')
    if bot_token:
        os.environ['TELEGRAM_BOT_TOKEN'] = bot_token
    
    print("–°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
    result = await send_table_to_telegram(chat_id, TABLE_MARKDOWN, CAPTION)
    
    if result:
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! Message ID: {result}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã")

if __name__ == '__main__':
    asyncio.run(main())
