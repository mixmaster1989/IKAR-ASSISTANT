#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π HTTP –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä –¥–ª—è ElevenLabs
"""

import socket
import threading
import requests
import urllib.parse

def handle_client(client_socket, addr):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"""
    try:
        # –ß–∏—Ç–∞–µ–º HTTP –∑–∞–ø—Ä–æ—Å
        request = client_socket.recv(4096).decode('utf-8')
        if not request:
            return
        
        # –ü–∞—Ä—Å–∏–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        lines = request.split('\n')
        first_line = lines[0]
        method, url, version = first_line.split(' ')
        
        # –ü–∞—Ä—Å–∏–º URL
        parsed = urllib.parse.urlparse(url)
        host = parsed.hostname
        port = parsed.port or 80
        
        print(f"üîó –ü—Ä–æ–∫—Å–∏: {method} {host}:{port}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —Ü–µ–ª–µ–≤–æ–º—É —Å–µ—Ä–≤–µ—Ä—É
        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server_socket.connect((host, port))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        server_socket.send(request.encode('utf-8'))
        
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç
        while True:
            data = server_socket.recv(4096)
            if not data:
                break
            client_socket.send(data)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏: {e}")
    finally:
        client_socket.close()

def start_proxy(port=1080):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä"""
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    server.bind(('127.0.0.1', port))
    server.listen(5)
    
    print(f"üöÄ HTTP –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    
    try:
        while True:
            client, addr = server.accept()
            thread = threading.Thread(target=handle_client, args=(client, addr))
            thread.start()
    except KeyboardInterrupt:
        print("üõë –ü—Ä–æ–∫—Å–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    finally:
        server.close()

if __name__ == '__main__':
    start_proxy()
