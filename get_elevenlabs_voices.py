#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤ ElevenLabs
"""

import requests
import json
import os
from dotenv import load_dotenv

def get_elevenlabs_voices():
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ–ª–æ—Å–æ–≤ ElevenLabs"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
    load_dotenv('/root/IKAR/.env')
    
    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
    api_key = os.getenv('ELEVEN_API')
    if not api_key:
        print("‚ùå API –∫–ª—é—á ELEVEN_API –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print("üé§ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ–ª–æ—Å–æ–≤ ElevenLabs...")
    print(f"üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á: {api_key[:10]}...")
    
    # –ó–∞–ø—Ä–æ—Å –∫ API
    url = "https://api.elevenlabs.io/v1/voices"
    headers = {
        "xi-api-key": api_key
    }
    
    try:
        response = requests.get(url, headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            voices = data.get('voices', [])
            
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(voices)} –≥–æ–ª–æ—Å–æ–≤")
            print("\n" + "="*80)
            
            # –ò—â–µ–º —Ä—É—Å—Å–∫–∏–µ –≥–æ–ª–æ—Å–∞
            russian_voices = []
            male_voices = []
            female_voices = []
            
            for voice in voices:
                voice_id = voice.get('voice_id')
                name = voice.get('name', 'Unknown')
                category = voice.get('category', 'Unknown')
                description = voice.get('description', '')
                labels = voice.get('labels', {})
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
                if 'ru' in labels.get('language', '').lower() or 'russian' in labels.get('language', '').lower():
                    russian_voices.append(voice)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª
                gender = labels.get('gender', '').lower()
                if gender == 'male':
                    male_voices.append(voice)
                elif gender == 'female':
                    female_voices.append(voice)
                
                print(f"üé§ {name}")
                print(f"   ID: {voice_id}")
                print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
                print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
                print(f"   –ú–µ—Ç–∫–∏: {labels}")
                print("-" * 40)
            
            print("\n" + "="*80)
            print("üá∑üá∫ –†–£–°–°–ö–ò–ï –ì–û–õ–û–°–ê:")
            if russian_voices:
                for voice in russian_voices:
                    print(f"‚úÖ {voice['name']} - {voice['voice_id']}")
            else:
                print("‚ùå –†—É—Å—Å–∫–∏–µ –≥–æ–ª–æ—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            print("\n" + "="*80)
            print("üë® –ú–£–ñ–°–ö–ò–ï –ì–û–õ–û–°–ê:")
            for voice in male_voices[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"‚úÖ {voice['name']} - {voice['voice_id']}")
            
            print("\n" + "="*80)
            print("üë© –ñ–ï–ù–°–ö–ò–ï –ì–û–õ–û–°–ê:")
            for voice in female_voices[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"‚úÖ {voice['name']} - {voice['voice_id']}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
            with open('/root/IKAR/elevenlabs_voices.json', 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
            print(f"\nüíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ /root/IKAR/elevenlabs_voices.json")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    get_elevenlabs_voices()
