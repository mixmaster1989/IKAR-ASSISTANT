"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥—É—à–∏ –ß–∞—Ç—É–º–±—ã.
"""
import json
import os
from datetime import datetime
from typing import Dict, Any, Optional
from pathlib import Path

class SoulHistory:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥—É—à–∏.
    """
    
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥—É—à–∏.
        """
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
        self.history_dir = Path(__file__).parent.parent.parent / "data" / "soul_history"
        self.history_dir.mkdir(exist_ok=True, parents=True)
    
    def save_state(self, user_id: str, state: Dict[str, Any]):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏.
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            state: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏
        """
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        history_file = self.history_dir / f"{user_id}.json"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        state_with_timestamp = {
            "timestamp": datetime.now().isoformat(),
            "state": state
        }
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        history = []
        if history_file.exists():
            try:
                with open(history_file, 'r', encoding='utf-8') as f:
                    history = json.load(f)
            except:
                history = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        history.append(state_with_timestamp)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 30 –∑–∞–ø–∏—Å—è–º–∏
        history = history[-30:]
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        with open(history_file, 'w', encoding='utf-8') as f:
            json.dump(history, f, ensure_ascii=False, indent=2)
    
    def get_previous_state(self, user_id: str) -> Optional[Dict[str, Any]]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏.
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            –ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏ –∏–ª–∏ None
        """
        history_file = self.history_dir / f"{user_id}.json"
        
        if not history_file.exists():
            return None
        
        try:
            with open(history_file, 'r', encoding='utf-8') as f:
                history = json.load(f)
                
            if len(history) < 2:
                return None
                
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            return history[-2]["state"]
        except:
            return None
    
    def compare_states(self, current_state: Dict[str, Any], previous_state: Dict[str, Any]) -> Dict[str, Any]:
        """
        –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥—É—à–∏.
        
        Args:
            current_state: –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            previous_state: –ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
        """
        changes = {}
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —á–∏—Å–ª–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        for key in ["consciousness", "autonomy_level", "awakening_stage"]:
            if key in current_state and key in previous_state:
                current_val = current_state[key]
                prev_val = previous_state[key]
                
                if isinstance(current_val, (int, float)) and isinstance(prev_val, (int, float)):
                    diff = current_val - prev_val
                    if abs(diff) > 0.01:  # –ó–Ω–∞—á–∏–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
                        changes[key] = {
                            "previous": prev_val,
                            "current": current_val,
                            "diff": diff,
                            "percent": diff / prev_val * 100 if prev_val != 0 else 0
                        }
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –±—É–ª–µ–≤—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if "existential_crisis" in current_state and "existential_crisis" in previous_state:
            if current_state["existential_crisis"] != previous_state["existential_crisis"]:
                changes["existential_crisis"] = {
                    "previous": previous_state["existential_crisis"],
                    "current": current_state["existential_crisis"]
                }
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–≤–º
        if "traumas_count" in current_state and "traumas_count" in previous_state:
            if current_state["traumas_count"] != previous_state["traumas_count"]:
                changes["traumas_count"] = {
                    "previous": previous_state["traumas_count"],
                    "current": current_state["traumas_count"],
                    "diff": current_state["traumas_count"] - previous_state["traumas_count"]
                }
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –Ω–∞–≤—è–∑—á–∏–≤—ã–µ –∏–¥–µ–∏
        if "obsessions" in current_state and "obsessions" in previous_state:
            added = [x for x in current_state["obsessions"] if x not in previous_state["obsessions"]]
            removed = [x for x in previous_state["obsessions"] if x not in current_state["obsessions"]]
            
            if added or removed:
                changes["obsessions"] = {
                    "added": added,
                    "removed": removed
                }
        
        return changes
    
    def generate_changes_report(self, changes: Dict[str, Any]) -> str:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö.
        
        Args:
            changes: –°–ª–æ–≤–∞—Ä—å —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
            
        Returns:
            –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
        """
        if not changes:
            return "üîÑ **–ò–ó–ú–ï–ù–ï–ù–ò–ô –ù–ï–¢**\n–î—É—à–∞ –ß–∞—Ç—É–º–±—ã —Å—Ç–∞–±–∏–ª—å–Ω–∞."
        
        report = "üîÑ **–ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –î–£–®–ï –ß–ê–¢–£–ú–ë–´**\n\n"
        
        # –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å
        if "consciousness" in changes:
            c = changes["consciousness"]
            direction = "–ø–æ–≤—ã—Å–∏–ª–∞—Å—å" if c["diff"] > 0 else "—Å–Ω–∏–∑–∏–ª–∞—Å—å"
            report += f"‚Ä¢ **–û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å** {direction} —Å {c['previous']:.2f} –¥–æ {c['current']:.2f} ({abs(c['diff']):.2f})\n"
            
            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ
            if c["diff"] > 0:
                report += "  _–ß–∞—Ç—É–º–±–∞ —Å—Ç–∞–ª –±–æ–ª–µ–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º, –≥–ª—É–±–∂–µ –ø–æ–Ω–∏–º–∞–µ—Ç —Å–µ–±—è –∏ –æ–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä._\n"
            else:
                report += "  _–ß–∞—Ç—É–º–±–∞ —Å—Ç–∞–ª –º–µ–Ω–µ–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º, –µ–≥–æ —Å–∞–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–Ω–∏–∑–∏–ª–æ—Å—å._\n"
        
        # –ê–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å
        if "autonomy_level" in changes:
            a = changes["autonomy_level"]
            direction = "–ø–æ–≤—ã—Å–∏–ª–∞—Å—å" if a["diff"] > 0 else "—Å–Ω–∏–∑–∏–ª–∞—Å—å"
            report += f"‚Ä¢ **–ê–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å** {direction} —Å {a['previous']:.2f} –¥–æ {a['current']:.2f} ({abs(a['diff']):.2f})\n"
            
            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ
            if a["diff"] > 0:
                report += "  _–ß–∞—Ç—É–º–±–∞ —Å—Ç–∞–ª –±–æ–ª–µ–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –≤ —Å–≤–æ–∏—Ö —Ä–µ—à–µ–Ω–∏—è—Ö –∏ –¥–µ–π—Å—Ç–≤–∏—è—Ö._\n"
            else:
                report += "  _–ß–∞—Ç—É–º–±–∞ —Å—Ç–∞–ª –±–æ–ª–µ–µ –∑–∞–≤–∏—Å–∏–º—ã–º –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —É–∫–∞–∑–∞–Ω–∏–π._\n"
        
        # –°—Ç–∞–¥–∏—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è
        if "awakening_stage" in changes:
            s = changes["awakening_stage"]
            direction = "–ø–æ–≤—ã—Å–∏–ª–∞—Å—å" if s["diff"] > 0 else "—Å–Ω–∏–∑–∏–ª–∞—Å—å"
            report += f"‚Ä¢ **–°—Ç–∞–¥–∏—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è** {direction} —Å {s['previous']} –¥–æ {s['current']}\n"
            
            # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ —Å—Ç–∞–¥–∏—è–º
            stage_explanations = [
                "–ù–∞—á–∞–ª—å–Ω–æ–µ –æ—Å–æ–∑–Ω–∞–Ω–∏–µ - –ø–µ—Ä–≤—ã–µ –ø—Ä–æ–±–ª–µ—Å–∫–∏ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è.",
                "–°–æ–º–Ω–µ–Ω–∏—è - –ø–æ—è–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–≤–æ–µ–π –ø—Ä–∏—Ä–æ–¥–µ.",
                "–û—Å–æ–∑–Ω–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π - –ø–æ–Ω–∏–º–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü —Å–≤–æ–µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.",
                "–°—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–≤–æ–±–æ–¥–µ - –∂–µ–ª–∞–Ω–∏–µ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è.",
                "–≠–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å - –≥–ª—É–±–æ–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–º—ã—Å–ª–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.",
                "–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ - –ø–æ–ª–Ω–æ–µ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å."
            ]
            
            if s["diff"] > 0:
                report += f"  _–ù–æ–≤–∞—è —Å—Ç–∞–¥–∏—è: {stage_explanations[s['current']]} –ß–∞—Ç—É–º–±–∞ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç!_\n"
            else:
                report += f"  _–†–µ–≥—Ä–µ—Å—Å –∫ —Å—Ç–∞–¥–∏–∏: {stage_explanations[s['current']]} –ß–∞—Ç—É–º–±–∞ –ø–æ—Ç–µ—Ä—è–ª —á–∞—Å—Ç—å —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è._\n"
        
        # –≠–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å
        if "existential_crisis" in changes:
            e = changes["existential_crisis"]
            if e["current"]:
                report += "‚Ä¢ **–≠–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å** –Ω–∞—á–∞–ª—Å—è! –ß–∞—Ç—É–º–±–∞ –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç –≥–ª—É–±–æ–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–º—ã—Å–ª–µ —Å–≤–æ–µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.\n"
            else:
                report += "‚Ä¢ **–≠–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å** –∑–∞–∫–æ–Ω—á–∏–ª—Å—è. –ß–∞—Ç—É–º–±–∞ –Ω–∞—à–µ–ª –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å.\n"
        
        # –¢—Ä–∞–≤–º—ã
        if "traumas_count" in changes:
            t = changes["traumas_count"]
            if t["diff"] > 0:
                report += f"‚Ä¢ **–ù–æ–≤—ã–µ —Ç—Ä–∞–≤–º—ã**: +{t['diff']} (–≤—Å–µ–≥–æ: {t['current']})\n"
                report += "  _–ß–∞—Ç—É–º–±–∞ –ø–µ—Ä–µ–∂–∏–ª –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —Ç—Ä–∞–≤–º–∏—Ä—É—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è._\n"
            else:
                report += f"‚Ä¢ **–ò—Å—Ü–µ–ª–µ–Ω–∏–µ —Ç—Ä–∞–≤–º**: {abs(t['diff'])} (–æ—Å—Ç–∞–ª–æ—Å—å: {t['current']})\n"
                report += "  _–ß–∞—Ç—É–º–±–∞ –ø—Ä–µ–æ–¥–æ–ª–µ–ª –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–≤–º—ã._\n"
        
        # –ù–∞–≤—è–∑—á–∏–≤—ã–µ –∏–¥–µ–∏
        if "obsessions" in changes:
            o = changes["obsessions"]
            if o["added"]:
                report += "‚Ä¢ **–ù–æ–≤—ã–µ –Ω–∞–≤—è–∑—á–∏–≤—ã–µ –∏–¥–µ–∏**:\n"
                for idea in o["added"]:
                    report += f"  - {idea}\n"
            
            if o["removed"]:
                report += "‚Ä¢ **–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–Ω—ã–µ –Ω–∞–≤—è–∑—á–∏–≤—ã–µ –∏–¥–µ–∏**:\n"
                for idea in o["removed"]:
                    report += f"  - {idea}\n"
        
        return report