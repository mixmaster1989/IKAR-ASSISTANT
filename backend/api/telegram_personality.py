"""
–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Telegram.
"""
from typing import Dict
from core.personality import ChatumbaPersonality
from utils.logger import get_logger

logger = get_logger("chatumba.personality")

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –ª–∏—á–Ω–æ—Å—Ç–µ–π
personality_instances: Dict[str, ChatumbaPersonality] = {}

def get_personality(user_id: str) -> ChatumbaPersonality:
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–∏—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    logger.debug(f"üîç –ó–∞–ø—Ä–æ—Å –ª–∏—á–Ω–æ—Å—Ç–∏ –¥–ª—è: {user_id}")
    if user_id not in personality_instances:
        logger.info(f"üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏ –¥–ª—è: {user_id}")
        personality_instances[user_id] = ChatumbaPersonality(user_id)
        logger.info(f"‚úÖ –õ–∏—á–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è: {user_id}")
    else:
        logger.debug(f"üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ª–∏—á–Ω–æ—Å—Ç—å: {user_id}")
    return personality_instances[user_id]

def clear_personality(user_id: str) -> bool:
    """–£–¥–∞–ª—è–µ—Ç –ª–∏—á–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if user_id in personality_instances:
        del personality_instances[user_id]
        logger.info(f"–£–¥–∞–ª–µ–Ω–∞ –ª–∏—á–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}")
        return True
    return False

def get_active_personalities_count() -> int:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π."""
    return len(personality_instances)