"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
"""

import asyncio
import logging
import os
from datetime import datetime
from typing import Dict, Any, Optional

from backend.api.telegram_auth import telegram_auth
from backend.api.telegram_core import (
    process_telegram_message, send_telegram_message, 
    send_monitoring_report, send_autonomous_message,
    send_autonomous_channel_message, send_channel_startup_message,
    download_telegram_file, get_stt_engine, get_tts_engine,
    temp_dir, TELEGRAM_CONFIG, monitoring_chat_id
)
from backend.api.telegram_polling import (
    send_evolution_report, show_collective_memory, 
    show_full_chunks_with_buttons, process_telegram_photo_with_crypto_detection
)
from backend.api.telegram_photo_handler import send_photo_recognition_buttons
from backend.memory.sqlite import sqlite_storage

logger = logging.getLogger(__name__)

async def handle_private_chat(message: Dict[str, Any], chat_id: str, user_id: str):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
    """
    global monitoring_chat_id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        from_user = message.get("from", {})
        username = from_user.get("username")
        first_name = from_user.get("first_name")
        last_name = from_user.get("last_name")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        if not telegram_auth.is_user_authorized(user_id):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ
            if "text" in message:
                text = message["text"].strip()
                auth_result = telegram_auth.process_auth_attempt(
                    user_id, text, username, first_name, last_name
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                await send_telegram_message(chat_id, auth_result["message"])
                
                # –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                if auth_result["authorized"]:
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º chat_id –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–ø–µ—Ä–≤—ã–π –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
                    if monitoring_chat_id is None:
                        monitoring_chat_id = chat_id
                        logger.info(f"üìä –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Ç: {chat_id}")
                        await send_telegram_message(chat_id, "üìä **–ú–û–ù–ò–¢–û–†–ò–ù–ì –ê–ö–¢–ò–í–ò–†–û–í–ê–ù**\n–ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –æ—Ç—á–µ—Ç—ã —Ä–∞–∑ –≤ –¥–µ–Ω—å\nüí≠ **–ê–í–¢–û–ù–û–ú–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø –í–ö–õ–Æ–ß–ï–ù–´**\n–ë—É–¥—É –ø–∏—Å–∞—Ç—å —Å–∞–º –∫–∞–∂–¥—ã–π —á–∞—Å!")
                else:
                    # –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                    return
            else:
                # –ù–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await send_telegram_message(chat_id, "üîê –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ.")
                return
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –æ–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            telegram_auth.update_last_activity(user_id)
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º chat_id –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–ø–µ—Ä–≤—ã–π –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
            if monitoring_chat_id is None:
                monitoring_chat_id = chat_id
                logger.info(f"üìä –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Ç: {chat_id}")
                await send_telegram_message(chat_id, "üìä **–ú–û–ù–ò–¢–û–†–ò–ù–ì –ê–ö–¢–ò–í–ò–†–û–í–ê–ù**\n–ë—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –æ—Ç—á–µ—Ç—ã —Ä–∞–∑ –≤ –¥–µ–Ω—å\nüí≠ **–ê–í–¢–û–ù–û–ú–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø –í–ö–õ–Æ–ß–ï–ù–´**\n–ë—É–¥—É –ø–∏—Å–∞—Ç—å —Å–∞–º –∫–∞–∂–¥—ã–π —á–∞—Å!")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        if "text" in message:
            text = message["text"]
            
            if text == "/report":
                await send_monitoring_report()
                return
            elif text == "/monitor_on":
                monitoring_chat_id = chat_id
                await send_telegram_message(chat_id, "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞")
                return
            elif text == "/monitor_off":
                monitoring_chat_id = None
                await send_telegram_message(chat_id, "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω")
                return
            elif text == "/autonomous":
                await send_autonomous_message()
                return
            elif text == "/–≠–í–û–õ–Æ–¶–ò–Ø" or text == "/—ç–≤–æ–ª—é—Ü–∏—è":
                await send_evolution_report(chat_id)
                return
            elif text == "/channel_on":
                TELEGRAM_CONFIG["enable_channel_posting"] = True
                await send_telegram_message(chat_id, "üì¢ –ü–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª –≤–∫–ª—é—á–µ–Ω")
                logger.info("–ü–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª –≤–∫–ª—é—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return
            elif text == "/channel_off":
                TELEGRAM_CONFIG["enable_channel_posting"] = False
                await send_telegram_message(chat_id, "üì¢ –ü–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω")
                logger.info("–ü–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return
            elif text == "/channel_post":
                if TELEGRAM_CONFIG["enable_channel_posting"]:
                    await send_autonomous_channel_message()
                    await send_telegram_message(chat_id, "üì¢ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª")
                else:
                    await send_telegram_message(chat_id, "‚ùå –ü–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /channel_on")
                return
            elif text == "/channel_startup":
                logger.info(f"üéØ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /channel_startup –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
                
                if TELEGRAM_CONFIG["enable_channel_posting"]:
                    logger.info("‚úÖ –ü–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª –≤–∫–ª—é—á–µ–Ω, –≤—ã–∑—ã–≤–∞–µ–º send_channel_startup_message...")
                    success = await send_channel_startup_message()
                    logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç send_channel_startup_message: {success}")
                    
                    if success:
                        await send_telegram_message(chat_id, "üì¢ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª 36,6¬∞")
                        logger.info("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /channel_startup –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                    else:
                        await send_telegram_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞.")
                        logger.error("‚ùå –ö–æ–º–∞–Ω–¥–∞ /channel_startup –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
                else:
                    await send_telegram_message(chat_id, "‚ùå –ü–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /channel_on")
                return
            elif text == "/auth_stats" or text == "/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏":
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                stats = telegram_auth.get_auth_stats()
                stats_text = "üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò**\n\n"
                stats_text += f"üë• **–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** {stats['authorized_users']}\n"
                stats_text += f"üö´ **–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** {stats['banned_users']}\n"
                stats_text += f"üî¢ **–ü–æ–ø—ã—Ç–æ–∫ –∑–∞ 24 —á–∞—Å–∞:** {stats['attempts_24h']}\n"
                await send_telegram_message(chat_id, stats_text, "HTML")
                return
            elif text == "/–ß–ê–ù–ö–ò" or text == "/—á–∞–Ω–∫–∏":
                logger.info(f"üß† –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫–∞–∑ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
                await show_collective_memory(chat_id)
                return
            elif text == "/–ß–ê–ù–ö–ò_–ü–û–õ–ù–´–ï" or text == "/—á–∞–Ω–∫–∏_–ø–æ–ª–Ω—ã–µ":
                logger.info(f"üß† –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —á–∞–Ω–∫–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
                await show_full_chunks_with_buttons(chat_id)
                return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¢–û–õ–¨–ö–û –î–õ–Ø –ê–í–¢–û–†–ò–ó–û–í–ê–ù–ù–´–•)
        if "text" in message:
            message_text = message["text"]
            logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {message_text}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ü–ï–†–ï–î –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
            if telegram_auth.is_user_authorized(user_id):
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                response_text, audio_path = await process_telegram_message(user_id, message_text)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                await send_telegram_message(chat_id, response_text)
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                await send_telegram_message(chat_id, "üîê –î–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ.")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ + –∫–Ω–æ–ø–∫–∏
        elif "photo" in message:
            logger.info(f"üì∑ –ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ –æ—Ç {chat_id} - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ + –∫–Ω–æ–ø–∫–∏")
            from_user = message.get("from", {}).get("id", "")
            message_id = message.get("message_id", 0)
            ts = message.get("date", int(datetime.now().timestamp()))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –æ —Ñ–æ—Ç–æ –≤ –ë–î
            sqlite_storage.save_group_message(
                chat_id=chat_id,
                message_id=message_id,
                user_id=str(from_user),
                msg_type="photo",
                content="[photo]",
                timestamp=ts
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            sqlite_storage.save_pending_photo(
                chat_id=chat_id,
                message_id=message_id,
                user_id=str(from_user),
                message_dict=message,
                timestamp=ts
            )
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≥–æ–ª–æ—Å–æ–≤—ã–º)
            try:
                from api.auto_image_recognition import process_image_automatically
                await process_image_automatically(chat_id, message, download_telegram_file, send_telegram_message)
                logger.info(f"ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω–æ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ {chat_id}_{message_id}")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ: {e}")
            
            # –¢–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
            await send_photo_recognition_buttons(chat_id, message_id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        elif "voice" in message:
            voice = message["voice"]
            file_id = voice["file_id"]
            duration = voice.get("duration", 0)
            
            logger.info(f"üé§ –ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id} (–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}—Å)")
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            audio_path = await download_telegram_file(file_id)
            
            if audio_path:
                try:
                    # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å
                    stt = get_stt_engine()
                    recognized_text = await stt.process_voice_message(audio_path)
                    
                    if recognized_text:
                        logger.info(f"üó£Ô∏è –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {recognized_text}")
                        
                        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–æ–ª–æ—Å–æ–≤—ã–º –æ—Ç–≤–µ—Ç–æ–º
                        response_text, response_audio = await process_telegram_message(
                            user_id, recognized_text, use_voice_response=True
                        )
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
                        await send_telegram_message(chat_id, f"üé§ –¢—ã —Å–∫–∞–∑–∞–ª: {recognized_text}\n\n{response_text}")
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
                        if response_audio and os.path.exists(response_audio):
                            from backend.api.telegram_core import send_telegram_voice
                            await send_telegram_voice(chat_id, response_audio)
                            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –æ—Ç–≤–µ—Ç–∞
                            try:
                                os.remove(response_audio)
                            except:
                                pass
                    else:
                        await send_telegram_message(chat_id, "–ù–µ —Å–º–æ–≥ —Ä–∞–∑–æ–±—Ä–∞—Ç—å —á—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª ü§∑‚Äç‚ôÇÔ∏è")
                    
                    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤—Ö–æ–¥—è—â–µ–≥–æ –≥–æ–ª–æ—Å–∞
                    try:
                        os.remove(audio_path)
                    except:
                        pass
                        
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–∞: {e}")
                    await send_telegram_message(chat_id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
                    
                    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
                    try:
                        os.remove(audio_path)
                    except:
                        pass
            else:
                await send_telegram_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —á–∞—Ç–∞: {e}")
        await send_telegram_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è") 