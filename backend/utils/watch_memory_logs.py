#!/usr/bin/env python3
"""
üëÅÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä –ª–æ–≥–æ–≤ –ø–∞–º—è—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""

import os
import time
import sys
from pathlib import Path

def watch_memory_logs():
    """–°–ª–µ–¥–∏—Ç –∑–∞ –ª–æ–≥–∞–º–∏ –ø–∞–º—è—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    log_file = Path("logs/memory_debug.log")
    
    if not log_file.exists():
        print("‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: logs/memory_debug.log")
        print("üí° –°–Ω–∞—á–∞–ª–∞ –≤–∫–ª—é—á–∏—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: python3 backend/utils/enable_memory_debug.py")
        return
    
    print("üß† –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ –ø–∞–º—è—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...")
    print("üìù –§–∞–π–ª: logs/memory_debug.log")
    print("‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("=" * 80)
    
    # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫
    try:
        with open(log_file, 'r', encoding='utf-8') as f:
            lines = f.readlines()
            if lines:
                print("".join(lines[-50:]))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
    
    # –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    last_size = log_file.stat().st_size
    
    try:
        while True:
            time.sleep(0.5)
            current_size = log_file.stat().st_size
            
            if current_size > last_size:
                with open(log_file, 'r', encoding='utf-8') as f:
                    f.seek(last_size)
                    new_content = f.read()
                    if new_content:
                        print(new_content, end='')
                last_size = current_size
                
    except KeyboardInterrupt:
        print("\n\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    watch_memory_logs()