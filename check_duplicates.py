#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
from collections import Counter

def check_duplicates():
    db_path = "data/chatumba.db"
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ group_history
        cursor.execute("""
            SELECT chat_id, user_id, content, timestamp, COUNT(*) as count
            FROM group_history 
            WHERE content IS NOT NULL 
            AND content != ''
            AND content != '[photo]'
            AND content != '[voice]'
            GROUP BY chat_id, user_id, content, timestamp
            HAVING COUNT(*) > 1
            ORDER BY count DESC
            LIMIT 10
        """)
        
        duplicates = cursor.fetchall()
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(duplicates)} –≥—Ä—É–ø–ø –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:")
        for dup in duplicates:
            print(f"  - –ß–∞—Ç: {dup[0]}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {dup[1]}, –î—É–±–ª–∏–∫–∞—Ç–æ–≤: {dup[4]}")
            print(f"    –ö–æ–Ω—Ç–µ–Ω—Ç: {dup[2][:50]}...")
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute("SELECT COUNT(*) FROM group_history")
        total = cursor.fetchone()[0]
        
        cursor.execute("""
            SELECT COUNT(*) FROM (
                SELECT DISTINCT chat_id, user_id, content, timestamp
                FROM group_history 
                WHERE content IS NOT NULL 
                AND content != ''
                AND content != '[photo]'
                AND content != '[voice]'
            )
        """)
        unique = cursor.fetchone()[0]
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  - –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total}")
        print(f"  - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {unique}")
        print(f"  - –î—É–±–ª–∏–∫–∞—Ç–æ–≤: {total - unique}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_duplicates()