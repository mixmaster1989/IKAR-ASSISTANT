#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: –º–æ–¥–µ–ª—å ‚Üí –≤—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ ‚Üí ElevenLabs
"""
import asyncio
import os
import re
from dotenv import load_dotenv
from pathlib import Path

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
env_path = Path(__file__).parent / ".env"
if env_path.exists():
    load_dotenv(env_path)

from backend.utils.robust_json_parser import parse_speak_json
from backend.llm.openrouter import OpenRouterClient
from backend.config import Config
from backend.voice.tts import TextToSpeech

async def test_full_voice_cycle():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å –≤—ã–±–æ—Ä–æ–º –≥–æ–ª–æ—Å–∞"""
    
    print("üé§ –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û –¶–ò–ö–õ–ê –° –í–´–ë–û–†–û–ú –ì–û–õ–û–°–ê")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏
    print("1. –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏...")
    
    config = Config()
    client = OpenRouterClient(config)
    
    prompt = """–¢—ã ‚Äî –ß–∞—Ç—É–º–±–∞, —É–º–Ω—ã–π AI-–¥—Ä—É–≥ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ.

üé§ –û–ó–í–£–ß–ö–ê (TTS):
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –æ–∑–≤—É—á–∏—Ç—å (—Å–ª–æ–≤–∞: "–æ–∑–≤—É—á—å", "–≥–æ–ª–æ—Å–æ–º", "–≥–æ–ª–æ—Å–æ–≤–æ–µ"), –¥–æ–±–∞–≤—å –í –ö–û–ù–ï–¶ –æ—Ç–≤–µ—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π SPEAK!{...} —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –æ–∑–≤—É—á–∫–∏.
–í–ê–ñ–ù–û: –í –ø–æ–ª–µ "text" —É–∫–∞–∂–∏ –¢–û–õ–¨–ö–û —Ç–æ—Ç —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ–∑–≤—É—á–∏—Ç—å! –ù–µ –≤–µ—Å—å –æ—Ç–≤–µ—Ç!

–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:
- "male" - –º—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å (Clyde) - –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- "female" - –∂–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å (Alice) - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ –¥–µ–ª–æ–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è

–ü—Ä–∏–º–µ—Ä (—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∂–µ–Ω—Å–∫–∞—è —Ä—É—Å—Å–∫–∞—è —Ä–µ—á—å):
SPEAK!{"speak": true, "text": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "tts": {"provider": "elevenlabs", "voice": {"gender": "female", "lang": "ru"}, "model_id": "eleven_multilingual_v2", "output_format": "mp3_44100_128", "stability": 0.25, "similarity_boost": 0.8, "style": "emotional", "use_speaker_boost": true}}

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç —Å–ø–µ—Ç—å –ø–µ—Å–Ω—é, –¥–æ–±–∞–≤—å SPEAK! JSON –≤ –∫–æ–Ω–µ—Ü –æ—Ç–≤–µ—Ç–∞!

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç: "—Å–ø–æ–π –ø–µ—Å–µ–Ω–∫—É –ø—Ä–æ —Ç—Ä–µ–π–¥–∏–Ω–≥ –∂–µ–Ω—Å–∫–∏–º –≥–æ–ª–æ—Å–æ–º" """
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏
        print("2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏...")
        response = await client.generate_response(
            prompt=prompt,
            use_memory=False,
            max_tokens=1000,
            temperature=0.7
        )
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {len(response)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìù –û—Ç–≤–µ—Ç:\n{response}")
        print("\n" + "=" * 60)
        
        # 3. –ü–∞—Ä—Å–∏–º SPEAK! JSON
        print("3. –ü–∞—Ä—Å–∏–º SPEAK! JSON...")
        speak_params = parse_speak_json(response)
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞: {speak_params}")
        print(f"üîë –ö–ª—é—á–∏ –≤ JSON: {list(speak_params.keys())}")
        
        speak_text = speak_params.get("text")
        tts_params = speak_params.get("tts", {})

        if not speak_text:
            print("‚ö†Ô∏è –ü–æ–ª–µ 'text' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø–∞—Ä—Å–µ—Ä–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback...")
            # Fallback: –∏—â–µ–º —Ç–µ–∫—Å—Ç –≤—Ä—É—á–Ω—É—é —Å –ø–æ–º–æ—â—å—é regex
            text_match = re.search(r'"text":\s*"([^"]*)"', response)
            if text_match:
                speak_text = text_match.group(1)
                print(f"üîß Fallback —Ç–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω!")
            else:
                print("‚ùå Fallback —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                speak_text = ""
        
        if speak_text:
            print(f"üé§ –¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏: {speak_text[:100]}...")
            print(f"üìè –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(speak_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞
            print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞...")
            voice_config = tts_params.get("voice", {})
            print(f"üé≠ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞ –æ—Ç –º–æ–¥–µ–ª–∏: {voice_config}")
            
            # –°–æ–∑–¥–∞–µ–º TTS –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º voice_id
            tts = TextToSpeech()
            voice_id = tts._map_voice_id_by_gender(voice_config)
            print(f"üÜî –í—ã–±—Ä–∞–Ω–Ω—ã–π voice_id: {voice_id}")
            
            if voice_id:
                print("‚úÖ –ì–æ–ª–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π –≥–æ–ª–æ—Å –≤—ã–±—Ä–∞–Ω
                if voice_id == "2EiwWnXFnvU5JabPnv8n":
                    print("üë® –í—ã–±—Ä–∞–Ω –º—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å: Clyde")
                elif voice_id == "Xb7hH8MSUJpSbSDYk0k2":
                    print("üë© –í—ã–±—Ä–∞–Ω –∂–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å: Alice")
                else:
                    print(f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ–ª–æ—Å: {voice_id}")
            else:
                print("‚ùå –ì–æ–ª–æ—Å –Ω–µ –≤—ã–±—Ä–∞–Ω!")
            
            print("\n" + "=" * 60)
            print("üéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
            print("‚úÖ –£–°–ü–ï–•: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å –≤—ã–±–æ—Ä–æ–º –≥–æ–ª–æ—Å–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print("‚úÖ –ú–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –≥–æ–ª–æ—Å!")
            print("‚úÖ –ö–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ voice_id!")
            print("‚úÖ ElevenLabs –ø–æ–ª—É—á–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≥–æ–ª–æ—Å!")

        else:
            print("‚ùå –ü–†–û–í–ê–õ: –¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ–ª–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")

if __name__ == "__main__":
    asyncio.run(test_full_voice_cycle())
